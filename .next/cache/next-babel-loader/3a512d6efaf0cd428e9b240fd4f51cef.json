{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\projects\\\\AdvancedReact\\\\frontend\\\\components\\\\Products.js\";\nimport { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport styled from \"styled-components\";\nimport { perPage } from \"../config\";\nimport Product from \"./Product\";\nexport const ALL_PRODUCTS_QUERY = gql`\n    query ALL_PRODUCTS_QUERY($skip: Int = 0, $first: Int){\n        allProducts(first: $first, skip: $skip) {\n            id\n            name\n            price\n            description\n            photo {\n            id\n            image {\n                publicUrlTransformed\n            }\n            }\n        }\n    }\n`;\nconst ProductsList = styled.div.withConfig({\n  displayName: \"Products__ProductsList\",\n  componentId: \"sc-1uv5x8m-0\"\n})([\"display:grid;grid-template-columns:1fr 1fr;grid-gap:60px;\"]);\nexport default function Products() {\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(ALL_PRODUCTS_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ProductsList, {\n      children: data.allProducts.map(product => /*#__PURE__*/_jsxDEV(Product, {\n        product: product\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 50\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["C:/projects/AdvancedReact/frontend/components/Products.js"],"names":["useQuery","gql","styled","perPage","Product","ALL_PRODUCTS_QUERY","ProductsList","div","Products","data","error","loading","variables","skip","page","first","message","allProducts","map","product","id"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,OAAO,MAAMC,kBAAkB,GAAGJ,GAAI;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfO;AAiBP,MAAMK,YAAY,GAAGJ,MAAM,CAACK,GAAV;AAAA;AAAA;AAAA,iEAAlB;AAMA,eAAe,SAASC,QAAT,GAAoB;AAC/B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA2BX,QAAQ,CAACK,kBAAD,EAAqB;AAC1DO,IAAAA,SAAS,EAAE;AACPC,MAAAA,IAAI,EAAEC,IAAI,GAAGX,OAAP,GAAiBA,OADhB;AAEPY,MAAAA,KAAK,EAAEZ;AAFA;AAD+C,GAArB,CAAzC;AAMA,MAAIQ,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO;AAAA,0BAAWA,KAAK,CAACM,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEX,sBACI;AAAA,2BACI,QAAC,YAAD;AAAA,gBACKP,IAAI,CAACQ,WAAL,CAAiBC,GAAjB,CAAqBC,OAAO,iBAAI,QAAC,OAAD;AAAS,QAAA,OAAO,EAAEA;AAAlB,SAAgCA,OAAO,CAACC,EAAxC;AAAA;AAAA;AAAA;AAAA,cAAhC;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH","sourcesContent":["import { useQuery } from \"@apollo/client\";\r\nimport gql from \"graphql-tag\"\r\nimport styled from \"styled-components\";\r\nimport { perPage } from \"../config\";\r\nimport Product from \"./Product\";\r\n\r\nexport const ALL_PRODUCTS_QUERY = gql`\r\n    query ALL_PRODUCTS_QUERY($skip: Int = 0, $first: Int){\r\n        allProducts(first: $first, skip: $skip) {\r\n            id\r\n            name\r\n            price\r\n            description\r\n            photo {\r\n            id\r\n            image {\r\n                publicUrlTransformed\r\n            }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst ProductsList = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-gap: 60px;\r\n`\r\n\r\nexport default function Products() {\r\n    const { data, error, loading } = useQuery(ALL_PRODUCTS_QUERY, {\r\n        variables: {\r\n            skip: page * perPage - perPage,\r\n            first: perPage\r\n        }\r\n    });\r\n    if (loading) return <p>Loading...</p>;\r\n    if (error) return <p>Error: {error.message}</p>\r\n\r\n    return (\r\n        <div>\r\n            <ProductsList>\r\n                {data.allProducts.map(product => <Product product={product} key={product.id}></Product>)}\r\n            </ProductsList>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}