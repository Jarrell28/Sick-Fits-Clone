{"ast":null,"code":"import _taggedTemplateLiteral from \"C:/projects/AdvancedReact/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\projects\\\\AdvancedReact\\\\frontend\\\\components\\\\Products.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    display: grid;\\n    grid-template-columns: 1fr 1fr;\\n    grid-gap: 60px;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query ALL_PRODUCTS_QUERY{\\n        allProducts {\\n            id\\n            name\\n            price\\n            description\\n            photo {\\n            id\\n            image {\\n                publicUrlTransformed\\n            }\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nvar ALL_PRODUCTS_QUERY = gql(_templateObject());\nvar ProductsList = styled.div(_templateObject2());\nexport default function Products() {\n  _s();\n\n  var _this = this;\n\n  var _useQuery = useQuery(ALL_PRODUCTS_QUERY),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: data.allProducts.map(function (product) {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: product.name\n        }, product.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 50\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Products, \"eE+cqeCo2lkI//dPlCsO1rICVGU=\", false, function () {\n  return [useQuery];\n});\n\n_c = Products;\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"sources":["C:/projects/AdvancedReact/frontend/components/Products.js"],"names":["useQuery","gql","ALL_PRODUCTS_QUERY","ProductsList","styled","div","Products","data","error","loading","message","allProducts","map","product","name","id"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,IAAMC,kBAAkB,GAAGD,GAAH,mBAAxB;AAiBA,IAAME,YAAY,GAAGC,MAAM,CAACC,GAAV,oBAAlB;AAMA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAAA;;AAAA,kBACEN,QAAQ,CAACE,kBAAD,CADV;AAAA,MACvBK,IADuB,aACvBA,IADuB;AAAA,MACjBC,KADiB,aACjBA,KADiB;AAAA,MACVC,OADU,aACVA,OADU;;AAE/B,MAAIA,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO;AAAA,0BAAWA,KAAK,CAACE,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEX,sBACI;AAAA,2BACI;AAAA,gBACKH,IAAI,CAACI,WAAL,CAAiBC,GAAjB,CAAqB,UAAAC,OAAO;AAAA,4BAAI;AAAA,oBAAqBA,OAAO,CAACC;AAA7B,WAAQD,OAAO,CAACE,EAAhB;AAAA;AAAA;AAAA;AAAA,iBAAJ;AAAA,OAA5B;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAZuBT,Q;UACaN,Q;;;KADbM,Q","sourcesContent":["import { useQuery } from \"@apollo/client\";\r\nimport gql from \"graphql-tag\"\r\n\r\nconst ALL_PRODUCTS_QUERY = gql`\r\n    query ALL_PRODUCTS_QUERY{\r\n        allProducts {\r\n            id\r\n            name\r\n            price\r\n            description\r\n            photo {\r\n            id\r\n            image {\r\n                publicUrlTransformed\r\n            }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst ProductsList = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-gap: 60px;\r\n`\r\n\r\nexport default function Products() {\r\n    const { data, error, loading } = useQuery(ALL_PRODUCTS_QUERY);\r\n    if (loading) return <p>Loading...</p>;\r\n    if (error) return <p>Error: {error.message}</p>\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                {data.allProducts.map(product => <p key={product.id}>{product.name}</p>)}\r\n            </div>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}