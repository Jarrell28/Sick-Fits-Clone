{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport _slicedToArray from \"C:/projects/AdvancedReact/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:/projects/AdvancedReact/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation DELETE_PRODUCT_MUTATION($id: ID!){\\n        deleteProduct(id: $id){\\n            id\\n            name\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useMutation } from '@apollo/client';\nimport gql from 'graphql-tag'; //Query to delete product by ID\n\nvar DELETE_PRODUCT_MUTATION = gql(_templateObject()); //Clears the deleted product from client Apollo graphql cache\n\nfunction update(cache, payload) {\n  cache.evict(cache.identify(payload.data.deleteProduct));\n} //Component to Delete Product \n\n\nexport default function DeleteProduct(_ref) {\n  var id = _ref.id,\n      children = _ref.children;\n\n  var _useMutation = useMutation(DELETE_PRODUCT_MUTATION, {\n    variables: {\n      id: id\n    },\n    update: update\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      deleteProduct = _useMutation2[0],\n      loading = _useMutation2[1].loading;\n\n  return /*#__PURE__*/_jsx(\"button\", {\n    type: \"button\",\n    disabled: loading,\n    onClick: function onClick() {\n      if (confirm('Are you sure you want to delete this item?')) {\n        deleteProduct(id)[\"catch\"](function (err) {\n          return alert(err.message);\n        });\n      }\n    },\n    children: children\n  });\n}","map":null,"metadata":{},"sourceType":"module"}