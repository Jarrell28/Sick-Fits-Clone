{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport Form from './styles/Form';\nimport useForm from '../lib/useForm';\nimport gql from 'graphql-tag';\nimport { CURRENT_USER_QUERY } from './User';\nimport { useMutation } from '@apollo/client';\nimport DisplayError from './ErrorMessage';\nconst RESET_MUTATION = gql`\n    mutation RESET_MUTATION($email: String!, $token: String!, $password: String!){\n        redeemUserPasswordResetToken(email: $email, token: $token, password: $password) {\n            code\n            message\n        }\n    }\n`; //Component to reset the password\n\nexport default function Reset({\n  token\n}) {\n  var _data$redeemUserPassw;\n\n  //setting initial values of inputs\n  const {\n    inputs,\n    handleChange,\n    resetForm\n  } = useForm({\n    email: '',\n    password: '',\n    token\n  }); //passing input values to backend\n\n  const [reset, {\n    data,\n    loading,\n    error\n  }] = useMutation(RESET_MUTATION, {\n    variables: inputs\n  }); //handling form submission\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    const res = await reset().catch(console.error);\n    console.log(res);\n    resetForm();\n  } //accounting for error received from password reset\n\n\n  const successfulError = data !== null && data !== void 0 && (_data$redeemUserPassw = data.redeemUserPasswordResetToken) !== null && _data$redeemUserPassw !== void 0 && _data$redeemUserPassw.code ? data === null || data === void 0 ? void 0 : data.redeemUserPasswordResetToken : undefined;\n  return /*#__PURE__*/_jsxs(Form, {\n    method: \"POST\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsx(\"h2\", {\n      children: \"Reset Your Password\"\n    }), /*#__PURE__*/_jsx(DisplayError, {\n      error: error || successfulError\n    }), /*#__PURE__*/_jsxs(\"fieldset\", {\n      children: [(data === null || data === void 0 ? void 0 : data.redeemUserPasswordResetToken) === null && /*#__PURE__*/_jsx(\"p\", {\n        children: \"Password Reset Complete! Please sign in\"\n      }), /*#__PURE__*/_jsxs(\"label\", {\n        htmlFor: \"email\",\n        children: [\"Email\", /*#__PURE__*/_jsx(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Your Email Address\",\n          autoComplete: \"email\",\n          value: inputs.email,\n          onChange: handleChange\n        })]\n      }), /*#__PURE__*/_jsxs(\"label\", {\n        htmlFor: \"password\",\n        children: [\"Password\", /*#__PURE__*/_jsx(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Your Password\",\n          autoComplete: \"password\",\n          value: inputs.password,\n          onChange: handleChange\n        })]\n      }), /*#__PURE__*/_jsx(\"button\", {\n        type: \"submit\",\n        children: \"Request Reset\"\n      })]\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}