{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\projects\\\\AdvancedReact\\\\frontend\\\\components\\\\Checkout.js\";\nimport styled from \"styled-components\";\nimport { loadStripe } from '@stripe/stripe-js';\nimport { CardElement, Elements, useElements, useStripe } from \"@stripe/react-stripe-js\";\nimport SickButton from './styles/SickButton';\nimport { useState } from \"react\";\nimport nProgress from \"nprogress\";\nconst CheckoutFormStyles = styled.form.withConfig({\n  displayName: \"Checkout__CheckoutFormStyles\",\n  componentId: \"sc-10mtoy5-0\"\n})([\"box-shadow:0 1px 2px 2px rgba(0,0,0,0.4);border:1px solid rgba(0,0,0,.06);border-radius:5px;padding:1rem;display:grid;grid-gap:1rem;\"]);\nconst stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\n\nfunction CheckoutForm() {\n  const {\n    0: error,\n    1: setError\n  } = useState(false);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const stripe = useStripe();\n  const elements = useElements();\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    setLoading(true); //Indicate page loading animation\n\n    nProgress.start(); //Creating stripe payment method, will return error or success token\n\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: elements.getElement(CardElement)\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(CheckoutFormStyles, {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SickButton, {\n      children: \"Checkout Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\nfunction Checkout() {\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripeLib,\n    children: /*#__PURE__*/_jsxDEV(CheckoutForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\nexport { Checkout };","map":{"version":3,"sources":["C:/projects/AdvancedReact/frontend/components/Checkout.js"],"names":["styled","loadStripe","CardElement","Elements","useElements","useStripe","SickButton","useState","nProgress","CheckoutFormStyles","form","stripeLib","process","env","NEXT_PUBLIC_STRIPE_KEY","CheckoutForm","error","setError","loading","setLoading","stripe","elements","handleSubmit","e","preventDefault","start","paymentMethod","createPaymentMethod","type","card","getElement","Checkout"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,WAAT,EAAsBC,QAAtB,EAAgCC,WAAhC,EAA6CC,SAA7C,QAA8D,yBAA9D;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AAEA,MAAMC,kBAAkB,GAAGT,MAAM,CAACU,IAAV;AAAA;AAAA;AAAA,4IAAxB;AASA,MAAMC,SAAS,GAAGV,UAAU,CAACW,OAAO,CAACC,GAAR,CAAYC,sBAAb,CAA5B;;AAGA,SAASC,YAAT,GAAwB;AACpB,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBV,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM;AAAA,OAACW,OAAD;AAAA,OAAUC;AAAV,MAAwBZ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMa,MAAM,GAAGf,SAAS,EAAxB;AACA,QAAMgB,QAAQ,GAAGjB,WAAW,EAA5B;;AAEA,iBAAekB,YAAf,CAA4BC,CAA5B,EAA+B;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AAEAL,IAAAA,UAAU,CAAC,IAAD,CAAV,CAH2B,CAK3B;;AACAX,IAAAA,SAAS,CAACiB,KAAV,GAN2B,CAQ3B;;AACA,UAAM;AAAET,MAAAA,KAAF;AAASU,MAAAA;AAAT,QAA2B,MAAMN,MAAM,CAACO,mBAAP,CAA2B;AAC9DC,MAAAA,IAAI,EAAE,MADwD;AAE9DC,MAAAA,IAAI,EAAER,QAAQ,CAACS,UAAT,CAAoB5B,WAApB;AAFwD,KAA3B,CAAvC;AAIH;;AAGD,sBACI,QAAC,kBAAD;AAAoB,IAAA,QAAQ,EAAEoB,YAA9B;AAAA,4BACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;AAED,SAASS,QAAT,GAAoB;AAChB,sBACI,QAAC,QAAD;AAAU,IAAA,MAAM,EAAEpB,SAAlB;AAAA,2BACI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;AAED,SAASoB,QAAT","sourcesContent":["import styled from \"styled-components\";\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport { CardElement, Elements, useElements, useStripe } from \"@stripe/react-stripe-js\";\r\nimport SickButton from './styles/SickButton';\r\nimport { useState } from \"react\";\r\nimport nProgress from \"nprogress\";\r\n\r\nconst CheckoutFormStyles = styled.form`\r\n    box-shadow: 0 1px 2px 2px rgba(0,0,0,0.4);\r\n    border: 1px solid rgba(0,0,0,.06);\r\n    border-radius: 5px;\r\n    padding: 1rem;\r\n    display: grid;\r\n    grid-gap: 1rem;\r\n`;\r\n\r\nconst stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\r\n\r\n\r\nfunction CheckoutForm() {\r\n    const [error, setError] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        setLoading(true);\r\n\r\n        //Indicate page loading animation\r\n        nProgress.start();\r\n\r\n        //Creating stripe payment method, will return error or success token\r\n        const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n            type: 'card',\r\n            card: elements.getElement(CardElement)\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <CheckoutFormStyles onSubmit={handleSubmit}>\r\n            <CardElement></CardElement>\r\n            <SickButton>Checkout Now</SickButton>\r\n        </CheckoutFormStyles>\r\n\r\n    )\r\n}\r\n\r\nfunction Checkout() {\r\n    return (\r\n        <Elements stripe={stripeLib}>\r\n            <CheckoutForm />\r\n        </Elements>\r\n    )\r\n}\r\n\r\nexport { Checkout };"]},"metadata":{},"sourceType":"module"}