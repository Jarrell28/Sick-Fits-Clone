{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\projects\\\\AdvancedReact\\\\frontend\\\\components\\\\DeleteProduct.js\";\nimport { useMutation } from '@apollo/client';\nimport gql from 'graphql-tag';\nconst DELETE_PRODUCT_MUTATION = gql`\n    mutation DELETE_PRODUCT_MUTATION($id: ID!){\n        deleteProduct(id: $id){\n            id\n            name\n        }\n    }\n`; //Clears the deleted product from client Apollo graphql cache\n\nfunction update(cache, payload) {\n  cache.evict(cache.identify(payload.data.deleteProduct));\n}\n\nexport default function DeleteProduct({\n  id,\n  children\n}) {\n  const [deleteProduct, {\n    loading\n  }] = useMutation(DELETE_PRODUCT_MUTATION, {\n    variables: {\n      id\n    },\n    update: update\n  });\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    disabled: loading,\n    onClick: () => {\n      if (confirm('Are you sure you want to delete this item?')) {\n        deleteProduct(id).catch(err => alert(err.message));\n      }\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 12\n  }, this);\n}","map":{"version":3,"sources":["C:/projects/AdvancedReact/frontend/components/DeleteProduct.js"],"names":["useMutation","gql","DELETE_PRODUCT_MUTATION","update","cache","payload","evict","identify","data","deleteProduct","DeleteProduct","id","children","loading","variables","confirm","catch","err","alert","message"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,gBAA5B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,MAAMC,uBAAuB,GAAGD,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,CAPA,C,CASA;;AACA,SAASE,MAAT,CAAgBC,KAAhB,EAAuBC,OAAvB,EAAgC;AAC5BD,EAAAA,KAAK,CAACE,KAAN,CAAYF,KAAK,CAACG,QAAN,CAAeF,OAAO,CAACG,IAAR,CAAaC,aAA5B,CAAZ;AACH;;AAED,eAAe,SAASC,aAAT,CAAuB;AAAEC,EAAAA,EAAF;AAAMC,EAAAA;AAAN,CAAvB,EAAyC;AACpD,QAAM,CAACH,aAAD,EAAgB;AAAEI,IAAAA;AAAF,GAAhB,IAA+Bb,WAAW,CAACE,uBAAD,EAA0B;AACtEY,IAAAA,SAAS,EAAE;AAAEH,MAAAA;AAAF,KAD2D;AAEtER,IAAAA,MAAM,EAAEA;AAF8D,GAA1B,CAAhD;AAKA,sBAAO;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,QAAQ,EAAEU,OAAhC;AAAyC,IAAA,OAAO,EAAE,MAAM;AAC3D,UAAIE,OAAO,CAAC,4CAAD,CAAX,EAA2D;AACvDN,QAAAA,aAAa,CAACE,EAAD,CAAb,CAAkBK,KAAlB,CAAyBC,GAAD,IAASC,KAAK,CAACD,GAAG,CAACE,OAAL,CAAtC;AACH;AACJ,KAJM;AAAA,cAKFP;AALE;AAAA;AAAA;AAAA;AAAA,UAAP;AAOH","sourcesContent":["import { useMutation } from '@apollo/client';\r\nimport gql from 'graphql-tag';\r\n\r\nconst DELETE_PRODUCT_MUTATION = gql`\r\n    mutation DELETE_PRODUCT_MUTATION($id: ID!){\r\n        deleteProduct(id: $id){\r\n            id\r\n            name\r\n        }\r\n    }\r\n`\r\n\r\n//Clears the deleted product from client Apollo graphql cache\r\nfunction update(cache, payload) {\r\n    cache.evict(cache.identify(payload.data.deleteProduct))\r\n}\r\n\r\nexport default function DeleteProduct({ id, children }) {\r\n    const [deleteProduct, { loading }] = useMutation(DELETE_PRODUCT_MUTATION, {\r\n        variables: { id },\r\n        update: update\r\n    })\r\n\r\n    return <button type=\"button\" disabled={loading} onClick={() => {\r\n        if (confirm('Are you sure you want to delete this item?')) {\r\n            deleteProduct(id).catch((err) => alert(err.message));\r\n        }\r\n    }}>\r\n        {children}\r\n    </button>\r\n}"]},"metadata":{},"sourceType":"module"}