{"ast":null,"code":"import _regeneratorRuntime from \"C:/projects/AdvancedReact/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _asyncToGenerator from \"C:/projects/AdvancedReact/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:/projects/AdvancedReact/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:/projects/AdvancedReact/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation SIGNIN_MUTATION($email: String!, $password: String!){\\n        authenticateUserWithPassword(email: $email, password: $password){\\n            ... on UserAuthenticationWithPasswordSuccess{\\n                item {\\n                    id\\n                    email\\n                    name\\n                }\\n            }\\n\\n            ... on UserAuthenticationWithPasswordFailure {\\n                code\\n                message\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Form from './styles/Form';\nimport useForm from '../lib/useForm';\nimport gql from 'graphql-tag';\nimport { CURRENT_USER_QUERY } from './User';\nimport { useMutation } from '@apollo/client';\nimport DisplayError from './ErrorMessage'; //Query to perform Sign in\n\nvar SIGNIN_MUTATION = gql(_templateObject());\nexport default function SignIn() {\n  //Setting initial values for form inputs\n  var _useForm = useForm({\n    email: '',\n    password: ''\n  }),\n      inputs = _useForm.inputs,\n      handleChange = _useForm.handleChange,\n      resetForm = _useForm.resetForm; //submitting input values to backend\n\n\n  var _useMutation = useMutation(SIGNIN_MUTATION, {\n    variables: inputs,\n    refetchQueries: [{\n      query: CURRENT_USER_QUERY\n    }] //refetchQueries updates the apollo client with the new data from mutation so no refresh is required\n\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      signin = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      data = _useMutation2$.data,\n      loading = _useMutation2$.loading; //handling submission\n\n\n  function handleSubmit(_x) {\n    return _handleSubmit.apply(this, arguments);\n  } //accounting for different authentication errors received\n\n\n  function _handleSubmit() {\n    _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              _context.next = 3;\n              return signin();\n\n            case 3:\n              res = _context.sent;\n              resetForm();\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  var error = (data === null || data === void 0 ? void 0 : data.authenticateUserWithPassword.__typename) === \"UserAuthenticationWithPasswordFailure\" ? data === null || data === void 0 ? void 0 : data.authenticateUserWithPassword : undefined;\n  return /*#__PURE__*/_jsxs(Form, {\n    method: \"POST\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsx(\"h2\", {\n      children: \"Sign Into Your Account\"\n    }), /*#__PURE__*/_jsx(DisplayError, {\n      error: error\n    }), /*#__PURE__*/_jsxs(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxs(\"label\", {\n        htmlFor: \"email\",\n        children: [\"Email\", /*#__PURE__*/_jsx(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Your Email Address\",\n          autoComplete: \"email\",\n          value: inputs.email,\n          onChange: handleChange\n        })]\n      }), /*#__PURE__*/_jsxs(\"label\", {\n        htmlFor: \"password\",\n        children: [\"Password\", /*#__PURE__*/_jsx(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Your Password\",\n          autoComplete: \"password\",\n          value: inputs.password,\n          onChange: handleChange\n        })]\n      }), /*#__PURE__*/_jsx(\"button\", {\n        type: \"submit\",\n        children: \"Sign In\"\n      })]\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}