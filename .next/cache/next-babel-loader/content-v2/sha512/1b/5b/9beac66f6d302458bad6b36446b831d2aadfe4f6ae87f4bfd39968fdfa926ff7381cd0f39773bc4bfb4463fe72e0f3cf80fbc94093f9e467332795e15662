{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _taggedTemplateLiteral from \"C:/projects/AdvancedReact/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query SINGLE_ORDER_QUERY($id: ID!){\\n        order: Order(where: { id: $id}) {\\n            id\\n            charge\\n            total\\n            user {\\n                id\\n            }\\n            items {\\n                id\\n                name\\n                description\\n                price\\n                quantity\\n                photo {\\n                    image {\\n                        publicUrlTransformed\\n                    }\\n                }\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from \"graphql-tag\";\nimport DisplayError from '../../components/ErrorMessage';\nimport OrderStyles from '../../components/styles/OrderStyles';\nimport Head from 'next/head';\nimport formatMoney from '../../lib/formatMoney';\nimport { useQuery } from \"@apollo/client\"; //Query to receive single order by order id\n\nvar SINGLE_ORDER_QUERY = gql(_templateObject()); //Component displaying a single order on the page\n\nexport default function SingleOrderPage(_ref) {\n  var query = _ref.query;\n\n  var _useQuery = useQuery(SINGLE_ORDER_QUERY, {\n    variables: {\n      id: query.id\n    }\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading; //Loading and Error state\n\n\n  if (loading) return /*#__PURE__*/_jsx(\"p\", {\n    children: \"Loading...\"\n  });\n  if (error) return /*#__PURE__*/_jsx(DisplayError, {\n    error: error\n  });\n  var order = data.order;\n  return /*#__PURE__*/_jsx(\"div\", {\n    children: /*#__PURE__*/_jsxs(OrderStyles, {\n      children: [/*#__PURE__*/_jsx(Head, {\n        children: /*#__PURE__*/_jsxs(\"title\", {\n          children: [\"Sick Fits - \", order.id]\n        })\n      }), /*#__PURE__*/_jsxs(\"p\", {\n        children: [/*#__PURE__*/_jsx(\"span\", {\n          children: \"Order Id:\"\n        }), /*#__PURE__*/_jsx(\"span\", {\n          children: order.id\n        })]\n      }), /*#__PURE__*/_jsxs(\"p\", {\n        children: [/*#__PURE__*/_jsx(\"span\", {\n          children: \"Charge:\"\n        }), /*#__PURE__*/_jsx(\"span\", {\n          children: order.charge\n        })]\n      }), /*#__PURE__*/_jsxs(\"p\", {\n        children: [/*#__PURE__*/_jsx(\"span\", {\n          children: \"Order Total:\"\n        }), /*#__PURE__*/_jsx(\"span\", {\n          children: formatMoney(order.total)\n        })]\n      }), /*#__PURE__*/_jsxs(\"p\", {\n        children: [/*#__PURE__*/_jsx(\"span\", {\n          children: \"Item Count:\"\n        }), /*#__PURE__*/_jsx(\"span\", {\n          children: order.items.length\n        })]\n      }), /*#__PURE__*/_jsxs(\"p\", {\n        children: [/*#__PURE__*/_jsx(\"span\", {\n          children: \"Order Id:\"\n        }), /*#__PURE__*/_jsx(\"span\", {\n          children: order.id\n        })]\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"items\",\n        children: order.items.map(function (item) {\n          return /*#__PURE__*/_jsxs(\"div\", {\n            className: \"order-item\",\n            children: [/*#__PURE__*/_jsx(\"img\", {\n              src: item.photo.image.publicUrlTransformed,\n              alt: item.title\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: \"item-details\",\n              children: [/*#__PURE__*/_jsx(\"h2\", {\n                children: item.name\n              }), /*#__PURE__*/_jsxs(\"p\", {\n                children: [\"Qty: \", item.quantity]\n              }), /*#__PURE__*/_jsxs(\"p\", {\n                children: [\"Each: \", formatMoney(item.price)]\n              }), /*#__PURE__*/_jsxs(\"p\", {\n                children: [\"Sub Total: \", formatMoney(item.price * item.quantity)]\n              }), /*#__PURE__*/_jsx(\"p\", {\n                children: item.description\n              })]\n            })]\n          }, item.id);\n        })\n      })]\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module"}