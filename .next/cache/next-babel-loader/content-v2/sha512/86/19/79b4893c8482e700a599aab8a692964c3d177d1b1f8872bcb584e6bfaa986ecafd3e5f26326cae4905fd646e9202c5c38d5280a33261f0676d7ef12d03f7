{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\projects\\\\AdvancedReact\\\\frontend\\\\components\\\\RemoveFromCart.js\";\nimport { useMutation } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport styled from \"styled-components\";\nconst BigButton = styled.button.withConfig({\n  displayName: \"RemoveFromCart__BigButton\",\n  componentId: \"emvtd6-0\"\n})([\"font-size:3rem;background:none;border:0;&:hover{color:var(--red);cursor:pointer;}\"]); //Query to remove the cart item by ID\n\nconst REMOVE_FROM_CART_MUTATION = gql`\n    mutation REMOVE_FROM_CART_MUTATION($id: ID!){\n        deleteCartItem(id: $id){\n            id\n        }\n    }\n`; //function used to take the item out of the apollo client cache when removing the item from cart\n//in order to instantly update the UI\n//This is useful as it does not make the request to the server like refetchQueries does to update the UI\n\nfunction update(cache, payload) {\n  cache.evict(cache.identify(payload.data.deleteCartItem));\n} //Remove Items From cart Component, taking in the ID of the cart item as the argument\n\n\nexport default function RemoveFromCart({\n  id\n}) {\n  const [removeFromCart, {\n    loading\n  }] = useMutation(REMOVE_FROM_CART_MUTATION, {\n    variables: {\n      id\n    },\n    update\n  });\n  return /*#__PURE__*/_jsxDEV(BigButton, {\n    disabled: loading,\n    onClick: removeFromCart,\n    type: \"button\",\n    title: \"Remove This Item from Cart\",\n    children: \"\\xD7\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["C:/projects/AdvancedReact/frontend/components/RemoveFromCart.js"],"names":["useMutation","gql","styled","BigButton","button","REMOVE_FROM_CART_MUTATION","update","cache","payload","evict","identify","data","deleteCartItem","RemoveFromCart","id","removeFromCart","loading","variables"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,gBAA5B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,SAAS,GAAGD,MAAM,CAACE,MAAV;AAAA;AAAA;AAAA,yFAAf,C,CASA;;AACA,MAAMC,yBAAyB,GAAGJ,GAAI;AACtC;AACA;AACA;AACA;AACA;AACA,CANA,C,CAQA;AACA;AACA;;AACA,SAASK,MAAT,CAAgBC,KAAhB,EAAuBC,OAAvB,EAAgC;AAC5BD,EAAAA,KAAK,CAACE,KAAN,CAAYF,KAAK,CAACG,QAAN,CAAeF,OAAO,CAACG,IAAR,CAAaC,cAA5B,CAAZ;AACH,C,CAED;;;AACA,eAAe,SAASC,cAAT,CAAwB;AAAEC,EAAAA;AAAF,CAAxB,EAAgC;AAC3C,QAAM,CAACC,cAAD,EAAiB;AAAEC,IAAAA;AAAF,GAAjB,IAAgChB,WAAW,CAACK,yBAAD,EAA4B;AACzEY,IAAAA,SAAS,EAAE;AAAEH,MAAAA;AAAF,KAD8D;AAEzER,IAAAA;AAFyE,GAA5B,CAAjD;AAKA,sBACI,QAAC,SAAD;AAAW,IAAA,QAAQ,EAAEU,OAArB;AAA8B,IAAA,OAAO,EAAED,cAAvC;AAAuD,IAAA,IAAI,EAAC,QAA5D;AAAqE,IAAA,KAAK,EAAC,4BAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH","sourcesContent":["import { useMutation } from \"@apollo/client\"\r\nimport gql from \"graphql-tag\"\r\nimport styled from \"styled-components\"\r\n\r\nconst BigButton = styled.button`\r\n    font-size: 3rem;\r\n    background: none;\r\n    border: 0;\r\n    &:hover {\r\n        color: var(--red);\r\n        cursor: pointer;\r\n    }\r\n`\r\n//Query to remove the cart item by ID\r\nconst REMOVE_FROM_CART_MUTATION = gql`\r\n    mutation REMOVE_FROM_CART_MUTATION($id: ID!){\r\n        deleteCartItem(id: $id){\r\n            id\r\n        }\r\n    }\r\n`\r\n\r\n//function used to take the item out of the apollo client cache when removing the item from cart\r\n//in order to instantly update the UI\r\n//This is useful as it does not make the request to the server like refetchQueries does to update the UI\r\nfunction update(cache, payload) {\r\n    cache.evict(cache.identify(payload.data.deleteCartItem));\r\n}\r\n\r\n//Remove Items From cart Component, taking in the ID of the cart item as the argument\r\nexport default function RemoveFromCart({ id }) {\r\n    const [removeFromCart, { loading }] = useMutation(REMOVE_FROM_CART_MUTATION, {\r\n        variables: { id },\r\n        update\r\n    })\r\n\r\n    return (\r\n        <BigButton disabled={loading} onClick={removeFromCart} type=\"button\" title=\"Remove This Item from Cart\">&times;</BigButton>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}