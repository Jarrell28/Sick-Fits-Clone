{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\projects\\\\AdvancedReact\\\\frontend\\\\pages\\\\orders.js\";\nimport gql from \"graphql-tag\";\nimport DisplayError from '../components/ErrorMessage';\nimport OrderStyles from '../components/styles/OrderStyles';\nimport Head from 'next/head';\nimport formatMoney from '../lib/formatMoney';\nimport { useQuery } from \"@apollo/client\"; //Query to receive single order by order id\n\nconst USERS_ORDERS_QUERY = gql`\n    query USERS_ORDERS_QUERY{\n        allOrders {\n            id\n            charge\n            total\n            user {\n                id\n            }\n            items {\n                id\n                name\n                description\n                price\n                quantity\n                photo {\n                    image {\n                        publicUrlTransformed\n                    }\n                }\n            }\n        }\n    }\n`; //Component displaying a single order on the page\n\nexport default function OrdersPage() {\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(USERS_ORDERS_QUERY); //Loading and Error state\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(DisplayError, {\n    error: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 23\n  }, this);\n  const {\n    allOrders\n  } = data;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: allOrders.length\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["C:/projects/AdvancedReact/frontend/pages/orders.js"],"names":["gql","DisplayError","OrderStyles","Head","formatMoney","useQuery","USERS_ORDERS_QUERY","OrdersPage","data","error","loading","allOrders","length"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,SAASC,QAAT,QAAyB,gBAAzB,C,CAEA;;AACA,MAAMC,kBAAkB,GAAGN,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAvBA,C,CAwBA;;AACA,eAAe,SAASO,UAAT,GAAsB;AACjC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA2BL,QAAQ,CAACC,kBAAD,CAAzC,CADiC,CAGjC;;AACA,MAAII,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO,QAAC,YAAD;AAAc,IAAA,KAAK,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,UAAP;AACX,QAAM;AAAEE,IAAAA;AAAF,MAAgBH,IAAtB;AAEA,sBACI;AAAA,cACKG,SAAS,CAACC;AADf;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH","sourcesContent":["import gql from \"graphql-tag\"\r\nimport DisplayError from '../components/ErrorMessage';\r\nimport OrderStyles from '../components/styles/OrderStyles';\r\nimport Head from 'next/head';\r\nimport formatMoney from '../lib/formatMoney';\r\nimport { useQuery } from \"@apollo/client\";\r\n\r\n//Query to receive single order by order id\r\nconst USERS_ORDERS_QUERY = gql`\r\n    query USERS_ORDERS_QUERY{\r\n        allOrders {\r\n            id\r\n            charge\r\n            total\r\n            user {\r\n                id\r\n            }\r\n            items {\r\n                id\r\n                name\r\n                description\r\n                price\r\n                quantity\r\n                photo {\r\n                    image {\r\n                        publicUrlTransformed\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`\r\n//Component displaying a single order on the page\r\nexport default function OrdersPage() {\r\n    const { data, error, loading } = useQuery(USERS_ORDERS_QUERY);\r\n\r\n    //Loading and Error state\r\n    if (loading) return <p>Loading...</p>\r\n    if (error) return <DisplayError error={error}></DisplayError>\r\n    const { allOrders } = data;\r\n\r\n    return (\r\n        <div>\r\n            {allOrders.length}\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}