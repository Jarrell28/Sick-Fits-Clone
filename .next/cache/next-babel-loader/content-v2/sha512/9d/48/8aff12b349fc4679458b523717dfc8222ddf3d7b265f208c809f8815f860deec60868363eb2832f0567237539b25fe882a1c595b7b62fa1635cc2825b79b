{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\projects\\\\AdvancedReact\\\\frontend\\\\components\\\\Search.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useLazyQuery } from '@apollo/client';\nimport { resetIdCounter, useCombobox } from 'downshift';\nimport gql from 'graphql-tag';\nimport debounce from 'lodash.debounce';\nimport { DropDown, DropDownItem, SearchStyles } from './styles/DropDown';\nconst SEARCH_PRODUCTS_QUERY = gql`\n    query SEARCH_PRODUCTS_QUERY($searchTerm: String!){\n        searchTerms: allProducts(where: {\n            OR: [\n                { name_contains_i: $searchTerm},\n                { description_contains_i: $searchTerm}\n            ]\n        }){\n            id\n            name\n            photo {\n                image {\n                    publicUrlTransformed\n                }\n            }\n        }\n    }\n`;\nexport default function Search() {\n  const [findItems, {\n    loading,\n    data,\n    error\n  }] = useLazyQuery(SEARCH_PRODUCTS_QUERY, {\n    fetchPolicy: 'no-cache' // bypasses the apollo client cache and always searches in the database\n\n  });\n  const items = (data === null || data === void 0 ? void 0 : data.searchTerms) || [];\n  const findItemsButChill = debounce(findItems, 350);\n  resetIdCounter();\n  const {\n    isOpen,\n    nputValue,\n    getMenuProps,\n    getInputProps,\n    getComboboxProps,\n    getItemProps,\n    highlightedIndex\n  } = useCombobox({\n    items: items,\n\n    onInputValueChange() {\n      console.log('Input Changed');\n      findItemsButChill({\n        variables: {\n          searchTerm: inputValue\n        }\n      });\n    },\n\n    onSelectedItemChange() {\n      console.log('selected item changed');\n    }\n\n  });\n  return /*#__PURE__*/_jsxDEV(SearchStyles, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({}, getComboboxProps()), {}, {\n      children: /*#__PURE__*/_jsxDEV(\"input\", _objectSpread({}, getInputProps({\n        type: 'search',\n        placeholder: 'Search for an Item',\n        id: 'search',\n        className: loading ? 'loading' : ''\n      })), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DropDown, _objectSpread(_objectSpread({}, getMenuProps()), {}, {\n      children: isOpen && items.map((item, index) => /*#__PURE__*/_jsxDEV(DropDownItem, _objectSpread(_objectSpread({}, getItemProps({\n        item\n      })), {}, {\n        highlighted: index === highlightedIndex,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.photo.image.publicUrlTransformed,\n          alt: item.name,\n          width: \"50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), item.name]\n      }), item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 55\n      }, this))\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["C:/projects/AdvancedReact/frontend/components/Search.js"],"names":["useLazyQuery","resetIdCounter","useCombobox","gql","debounce","DropDown","DropDownItem","SearchStyles","SEARCH_PRODUCTS_QUERY","Search","findItems","loading","data","error","fetchPolicy","items","searchTerms","findItemsButChill","isOpen","nputValue","getMenuProps","getInputProps","getComboboxProps","getItemProps","highlightedIndex","onInputValueChange","console","log","variables","searchTerm","inputValue","onSelectedItemChange","type","placeholder","id","className","map","item","index","photo","image","publicUrlTransformed","name"],"mappings":";;;;;;;;;AAAA,SAASA,YAAT,QAA6B,gBAA7B;AACA,SAASC,cAAT,EAAyBC,WAAzB,QAA4C,WAA5C;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,SAASC,QAAT,EAAmBC,YAAnB,EAAiCC,YAAjC,QAAqD,mBAArD;AAEA,MAAMC,qBAAqB,GAAGL,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAjBA;AAmBA,eAAe,SAASM,MAAT,GAAkB;AAC7B,QAAM,CAACC,SAAD,EAAY;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAiBC,IAAAA;AAAjB,GAAZ,IAAwCb,YAAY,CAACQ,qBAAD,EAAwB;AAC9EM,IAAAA,WAAW,EAAE,UADiE,CACtD;;AADsD,GAAxB,CAA1D;AAIA,QAAMC,KAAK,GAAG,CAAAH,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEI,WAAN,KAAqB,EAAnC;AACA,QAAMC,iBAAiB,GAAGb,QAAQ,CAACM,SAAD,EAAY,GAAZ,CAAlC;AAEAT,EAAAA,cAAc;AACd,QAAM;AAAEiB,IAAAA,MAAF;AAAUC,IAAAA,SAAV;AAAqBC,IAAAA,YAArB;AAAmCC,IAAAA,aAAnC;AAAkDC,IAAAA,gBAAlD;AAAoEC,IAAAA,YAApE;AAAkFC,IAAAA;AAAlF,MAAuGtB,WAAW,CAAC;AACrHa,IAAAA,KAAK,EAAEA,KAD8G;;AAErHU,IAAAA,kBAAkB,GAAG;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAV,MAAAA,iBAAiB,CAAC;AACdW,QAAAA,SAAS,EAAE;AACPC,UAAAA,UAAU,EAAEC;AADL;AADG,OAAD,CAAjB;AAKH,KAToH;;AAUrHC,IAAAA,oBAAoB,GAAG;AACnBL,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACH;;AAZoH,GAAD,CAAxH;AAgBA,sBACI,QAAC,YAAD;AAAA,4BACI,+CAASL,gBAAgB,EAAzB;AAAA,6BACI,mCAAWD,aAAa,CAAC;AACrBW,QAAAA,IAAI,EAAE,QADe;AAErBC,QAAAA,WAAW,EAAE,oBAFQ;AAGrBC,QAAAA,EAAE,EAAE,QAHiB;AAIrBC,QAAAA,SAAS,EAAExB,OAAO,GAAG,SAAH,GAAe;AAJZ,OAAD,CAAxB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eASI,QAAC,QAAD,kCAAcS,YAAY,EAA1B;AAAA,gBACKF,MAAM,IAAIH,KAAK,CAACqB,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBAAiB,QAAC,YAAD,kCAAgCf,YAAY,CAAC;AAAEc,QAAAA;AAAF,OAAD,CAA5C;AAAwD,QAAA,WAAW,EAAEC,KAAK,KAAKd,gBAA/E;AAAA,gCAClC;AAAK,UAAA,GAAG,EAAEa,IAAI,CAACE,KAAL,CAAWC,KAAX,CAAiBC,oBAA3B;AAAiD,UAAA,GAAG,EAAEJ,IAAI,CAACK,IAA3D;AAAiE,UAAA,KAAK,EAAC;AAAvE;AAAA;AAAA;AAAA;AAAA,gBADkC,EAEjCL,IAAI,CAACK,IAF4B;AAAA,UAAmBL,IAAI,CAACH,EAAxB;AAAA;AAAA;AAAA;AAAA,cAA3B;AADf;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH","sourcesContent":["import { useLazyQuery } from '@apollo/client';\r\nimport { resetIdCounter, useCombobox } from 'downshift'\r\nimport gql from 'graphql-tag';\r\nimport debounce from 'lodash.debounce';\r\nimport { DropDown, DropDownItem, SearchStyles } from './styles/DropDown'\r\n\r\nconst SEARCH_PRODUCTS_QUERY = gql`\r\n    query SEARCH_PRODUCTS_QUERY($searchTerm: String!){\r\n        searchTerms: allProducts(where: {\r\n            OR: [\r\n                { name_contains_i: $searchTerm},\r\n                { description_contains_i: $searchTerm}\r\n            ]\r\n        }){\r\n            id\r\n            name\r\n            photo {\r\n                image {\r\n                    publicUrlTransformed\r\n                }\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport default function Search() {\r\n    const [findItems, { loading, data, error }] = useLazyQuery(SEARCH_PRODUCTS_QUERY, {\r\n        fetchPolicy: 'no-cache' // bypasses the apollo client cache and always searches in the database\r\n    })\r\n\r\n    const items = data?.searchTerms || [];\r\n    const findItemsButChill = debounce(findItems, 350);\r\n\r\n    resetIdCounter();\r\n    const { isOpen, nputValue, getMenuProps, getInputProps, getComboboxProps, getItemProps, highlightedIndex } = useCombobox({\r\n        items: items,\r\n        onInputValueChange() {\r\n            console.log('Input Changed')\r\n            findItemsButChill({\r\n                variables: {\r\n                    searchTerm: inputValue,\r\n                }\r\n            });\r\n        },\r\n        onSelectedItemChange() {\r\n            console.log('selected item changed')\r\n        }\r\n\r\n    });\r\n\r\n    return (\r\n        <SearchStyles>\r\n            <div {...getComboboxProps()}>\r\n                <input {...getInputProps({\r\n                    type: 'search',\r\n                    placeholder: 'Search for an Item',\r\n                    id: 'search',\r\n                    className: loading ? 'loading' : ''\r\n                })} />\r\n            </div>\r\n            <DropDown {...getMenuProps()}>\r\n                {isOpen && items.map((item, index) => <DropDownItem key={item.id} {...getItemProps({ item })} highlighted={index === highlightedIndex}>\r\n                    <img src={item.photo.image.publicUrlTransformed} alt={item.name} width=\"50\" />\r\n                    {item.name}\r\n                </DropDownItem>)}\r\n            </DropDown>\r\n        </SearchStyles>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}