{"ast":null,"code":"import _regeneratorRuntime from \"C:/projects/AdvancedReact/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"C:/projects/AdvancedReact/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\projects\\\\AdvancedReact\\\\frontend\\\\components\\\\Checkout.js\",\n    _s = $RefreshSig$();\n\nimport styled from \"styled-components\";\nimport { loadStripe } from '@stripe/stripe-js';\nimport { CardElement, Elements, useElements, useStripe } from \"@stripe/react-stripe-js\";\nimport SickButton from './styles/SickButton';\nimport { useState } from \"react\";\nimport nProgress from \"nprogress\";\nvar CheckoutFormStyles = styled.form.withConfig({\n  displayName: \"Checkout__CheckoutFormStyles\",\n  componentId: \"sc-10mtoy5-0\"\n})([\"box-shadow:0 1px 2px 2px rgba(0,0,0,0.4);border:1px solid rgba(0,0,0,.06);border-radius:5px;padding:1rem;display:grid;grid-gap:1rem;\"]); //Using Stripe library to perform live transactions\n//Loading stripe functionality\n\n_c = CheckoutFormStyles;\nvar stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY); //Checkout Form\n\nfunction CheckoutForm() {\n  _s();\n\n  var _useState = useState(false),\n      error = _useState[0],\n      setError = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1]; //Loading stripe method\n\n\n  var stripe = useStripe(); //stripe api card elements\n\n  var elements = useElements();\n\n  function handleSubmit(_x) {\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  function _handleSubmit() {\n    _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var _yield$stripe$createP, error, paymentMethod;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              setLoading(true); //Indicate page loading animation\n\n              nProgress.start(); //Creating stripe payment method, will return error or success token\n\n              _context.next = 5;\n              return stripe.createPaymentMethod({\n                type: 'card',\n                card: elements.getElement(CardElement)\n              });\n\n            case 5:\n              _yield$stripe$createP = _context.sent;\n              error = _yield$stripe$createP.error;\n              paymentMethod = _yield$stripe$createP.paymentMethod;\n              console.log(paymentMethod);\n\n              if (error) {\n                setError(error);\n              } //Loading completed, ending transition animation\n\n\n              setLoading(false);\n              nProgress.done();\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(CheckoutFormStyles, {\n    onSubmit: handleSubmit,\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SickButton, {\n      children: \"Checkout Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n} //Component containing stripe provider wrapper\n//Have it separately in order for Checkout Form to use useStripe() method\n\n\n_s(CheckoutForm, \"tXG1q/9Pqi3TsoiMvc3V/lcyEL0=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c2 = CheckoutForm;\n\nfunction Checkout() {\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripeLib,\n    children: /*#__PURE__*/_jsxDEV(CheckoutForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n\n_c3 = Checkout;\nexport { Checkout };\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CheckoutFormStyles\");\n$RefreshReg$(_c2, \"CheckoutForm\");\n$RefreshReg$(_c3, \"Checkout\");","map":{"version":3,"sources":["C:/projects/AdvancedReact/frontend/components/Checkout.js"],"names":["styled","loadStripe","CardElement","Elements","useElements","useStripe","SickButton","useState","nProgress","CheckoutFormStyles","form","stripeLib","process","env","NEXT_PUBLIC_STRIPE_KEY","CheckoutForm","error","setError","loading","setLoading","stripe","elements","handleSubmit","e","preventDefault","start","createPaymentMethod","type","card","getElement","paymentMethod","console","log","done","message","Checkout"],"mappings":";;;;;;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,WAAT,EAAsBC,QAAtB,EAAgCC,WAAhC,EAA6CC,SAA7C,QAA8D,yBAA9D;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AAEA,IAAMC,kBAAkB,GAAGT,MAAM,CAACU,IAAV;AAAA;AAAA;AAAA,4IAAxB,C,CASA;AACA;;KAVMD,kB;AAWN,IAAME,SAAS,GAAGV,UAAU,CAACW,OAAO,CAACC,GAAR,CAAYC,sBAAb,CAA5B,C,CAEA;;AACA,SAASC,YAAT,GAAwB;AAAA;;AAAA,kBACMR,QAAQ,CAAC,KAAD,CADd;AAAA,MACbS,KADa;AAAA,MACNC,QADM;;AAAA,mBAEUV,QAAQ,CAAC,KAAD,CAFlB;AAAA,MAEbW,OAFa;AAAA,MAEJC,UAFI,kBAGpB;;;AACA,MAAMC,MAAM,GAAGf,SAAS,EAAxB,CAJoB,CAKpB;;AACA,MAAMgB,QAAQ,GAAGjB,WAAW,EAA5B;;AANoB,WAQLkB,YARK;AAAA;AAAA;;AAAA;AAAA,6EAQpB,iBAA4BC,CAA5B;AAAA;;AAAA;AAAA;AAAA;AAAA;AACIA,cAAAA,CAAC,CAACC,cAAF;AAEAL,cAAAA,UAAU,CAAC,IAAD,CAAV,CAHJ,CAKI;;AACAX,cAAAA,SAAS,CAACiB,KAAV,GANJ,CAQI;;AARJ;AAAA,qBAS2CL,MAAM,CAACM,mBAAP,CAA2B;AAC9DC,gBAAAA,IAAI,EAAE,MADwD;AAE9DC,gBAAAA,IAAI,EAAEP,QAAQ,CAACQ,UAAT,CAAoB3B,WAApB;AAFwD,eAA3B,CAT3C;;AAAA;AAAA;AASYc,cAAAA,KATZ,yBASYA,KATZ;AASmBc,cAAAA,aATnB,yBASmBA,aATnB;AAaIC,cAAAA,OAAO,CAACC,GAAR,CAAYF,aAAZ;;AAEA,kBAAId,KAAJ,EAAW;AACPC,gBAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,eAjBL,CAmBI;;;AACAG,cAAAA,UAAU,CAAC,KAAD,CAAV;AACAX,cAAAA,SAAS,CAACyB,IAAV;;AArBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KARoB;AAAA;AAAA;;AAiCpB,sBACI,QAAC,kBAAD;AAAoB,IAAA,QAAQ,EAAEX,YAA9B;AAAA,eACKN,KAAK,iBAAI;AAAA,gBAAIA,KAAK,CAACkB;AAAV;AAAA;AAAA;AAAA;AAAA,YADd,eAGI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,C,CAED;AACA;;;GA7CSnB,Y;UAIUV,S,EAEED,W;;;MANZW,Y;;AA8CT,SAASoB,QAAT,GAAoB;AAChB,sBACI,QAAC,QAAD;AAAU,IAAA,MAAM,EAAExB,SAAlB;AAAA,2BACI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;MANQwB,Q;AAQT,SAASA,QAAT","sourcesContent":["import styled from \"styled-components\";\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport { CardElement, Elements, useElements, useStripe } from \"@stripe/react-stripe-js\";\r\nimport SickButton from './styles/SickButton';\r\nimport { useState } from \"react\";\r\nimport nProgress from \"nprogress\";\r\n\r\nconst CheckoutFormStyles = styled.form`\r\n    box-shadow: 0 1px 2px 2px rgba(0,0,0,0.4);\r\n    border: 1px solid rgba(0,0,0,.06);\r\n    border-radius: 5px;\r\n    padding: 1rem;\r\n    display: grid;\r\n    grid-gap: 1rem;\r\n`;\r\n\r\n//Using Stripe library to perform live transactions\r\n//Loading stripe functionality\r\nconst stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\r\n\r\n//Checkout Form\r\nfunction CheckoutForm() {\r\n    const [error, setError] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    //Loading stripe method\r\n    const stripe = useStripe();\r\n    //stripe api card elements\r\n    const elements = useElements();\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        setLoading(true);\r\n\r\n        //Indicate page loading animation\r\n        nProgress.start();\r\n\r\n        //Creating stripe payment method, will return error or success token\r\n        const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n            type: 'card',\r\n            card: elements.getElement(CardElement)\r\n        })\r\n        console.log(paymentMethod)\r\n\r\n        if (error) {\r\n            setError(error);\r\n        }\r\n\r\n        //Loading completed, ending transition animation\r\n        setLoading(false);\r\n        nProgress.done();\r\n    }\r\n\r\n\r\n    return (\r\n        <CheckoutFormStyles onSubmit={handleSubmit}>\r\n            {error && <p>{error.message}</p>}\r\n            {/* Stripe Card form */}\r\n            <CardElement></CardElement>\r\n            <SickButton>Checkout Now</SickButton>\r\n        </CheckoutFormStyles>\r\n\r\n    )\r\n}\r\n\r\n//Component containing stripe provider wrapper\r\n//Have it separately in order for Checkout Form to use useStripe() method\r\nfunction Checkout() {\r\n    return (\r\n        <Elements stripe={stripeLib}>\r\n            <CheckoutForm />\r\n        </Elements>\r\n    )\r\n}\r\n\r\nexport { Checkout };"]},"metadata":{},"sourceType":"module"}