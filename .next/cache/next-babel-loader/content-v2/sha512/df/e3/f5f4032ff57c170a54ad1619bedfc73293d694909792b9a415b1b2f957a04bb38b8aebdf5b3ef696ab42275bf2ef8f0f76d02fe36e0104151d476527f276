{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"C:/projects/AdvancedReact/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:/projects/AdvancedReact/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\projects\\\\AdvancedReact\\\\frontend\\\\components\\\\AddToCart.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation ADD_TO_CART_MUTATION($id: ID!) {\\n        addToCart(productId: $id){\\n            id\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useMutation } from \"@apollo/client\";\nimport gql from \"graphql-tag\"; //Query that takes product ID and adds the id to cart table\n\nvar ADD_TO_CART_MUTATION = gql(_templateObject()); //Add to cart button that takes in product id as argument\n\nexport default function AddToCart(_ref) {\n  _s();\n\n  var id = _ref.id;\n\n  var _useMutation = useMutation(ADD_TO_CART_MUTATION, {\n    variables: {\n      id: id\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      addToCart = _useMutation2[0],\n      loading = _useMutation2[1].loading;\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    disabled: loading,\n    type: \"button\",\n    onClick: addToCart,\n    children: [\"Add\", loading && 'ing', \" To Cart!\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddToCart, \"0aUF08z5KB1kKj1IAAtYYFUdh4k=\", false, function () {\n  return [useMutation];\n});\n\n_c = AddToCart;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddToCart\");","map":{"version":3,"sources":["C:/projects/AdvancedReact/frontend/components/AddToCart.js"],"names":["useMutation","gql","ADD_TO_CART_MUTATION","AddToCart","id","variables","addToCart","loading"],"mappings":";;;;;;;;;;;;;;;;;AACA,SAASA,WAAT,QAA4B,gBAA5B;AACA,OAAOC,GAAP,MAAgB,aAAhB,C,CAEA;;AACA,IAAMC,oBAAoB,GAAGD,GAAH,mBAA1B,C,CAQA;;AACA,eAAe,SAASE,SAAT,OAA2B;AAAA;;AAAA,MAANC,EAAM,QAANA,EAAM;;AAAA,qBACLJ,WAAW,CAACE,oBAAD,EAAuB;AAC/DG,IAAAA,SAAS,EAAE;AAAED,MAAAA,EAAE,EAAEA;AAAN;AADoD,GAAvB,CADN;AAAA;AAAA,MAC/BE,SAD+B;AAAA,MAClBC,OADkB,oBAClBA,OADkB;;AAKtC,sBACI;AAAQ,IAAA,QAAQ,EAAEA,OAAlB;AAA2B,IAAA,IAAI,EAAC,QAAhC;AAAyC,IAAA,OAAO,EAAED,SAAlD;AAAA,sBAAiEC,OAAO,IAAI,KAA5E;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;;GARuBJ,S;UACaH,W;;;KADbG,S","sourcesContent":["\r\nimport { useMutation } from \"@apollo/client\"\r\nimport gql from \"graphql-tag\"\r\n\r\n//Query that takes product ID and adds the id to cart table\r\nconst ADD_TO_CART_MUTATION = gql`\r\n    mutation ADD_TO_CART_MUTATION($id: ID!) {\r\n        addToCart(productId: $id){\r\n            id\r\n        }\r\n    }\r\n`\r\n\r\n//Add to cart button that takes in product id as argument\r\nexport default function AddToCart({ id }) {\r\n    const [addToCart, { loading }] = useMutation(ADD_TO_CART_MUTATION, {\r\n        variables: { id: id }\r\n    })\r\n\r\n    return (\r\n        <button disabled={loading} type=\"button\" onClick={addToCart}>Add{loading && 'ing'} To Cart!</button>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}