{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\projects\\\\AdvancedReact\\\\frontend\\\\components\\\\SignUp.js\";\nimport Form from './styles/Form';\nimport useForm from '../lib/useForm';\nimport gql from 'graphql-tag';\nimport { CURRENT_USER_QUERY } from './User';\nimport { useMutation } from '@apollo/client';\nimport DisplayError from './ErrorMessage';\nconst SIGNUP_MUTATION = gql`\n    mutation SIGNUP_MUTATION($email: String!, $name: String!, $password: String!){\n        createUser(data: {\n            email: $email\n            name: $name\n            password: $password\n        }) {\n            id\n            email\n            name\n        }\n    }\n`;\nexport default function SignUp() {\n  const {\n    inputs,\n    handleChange,\n    resetForm\n  } = useForm({\n    email: '',\n    name: '',\n    password: ''\n  });\n  const [signup, {\n    data,\n    loading,\n    error\n  }] = useMutation(SIGNUP_MUTATION, {\n    variables: inputs // refetchQueries: [{ query: CURRENT_USER_QUERY }]\n\n  });\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    const res = await signup();\n    resetForm();\n  } // const error = data?.authenticateUserWithPassword.__typename === \"UserAuthenticationWithPasswordFailure\" ? data?.authenticateUserWithPassword : undefined;\n\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    method: \"POST\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create an Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DisplayError, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Your Email Address\",\n          autoComplete: \"email\",\n          value: inputs.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          placeholder: \"Your Name\",\n          autoComplete: \"name\",\n          value: inputs.name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: [\"Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Your Password\",\n          autoComplete: \"password\",\n          value: inputs.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["C:/projects/AdvancedReact/frontend/components/SignUp.js"],"names":["Form","useForm","gql","CURRENT_USER_QUERY","useMutation","DisplayError","SIGNUP_MUTATION","SignUp","inputs","handleChange","resetForm","email","name","password","signup","data","loading","error","variables","handleSubmit","e","preventDefault","res"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,eAAjB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,kBAAT,QAAmC,QAAnC;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,MAAMC,eAAe,GAAGJ,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;AAcA,eAAe,SAASK,MAAT,GAAkB;AAC7B,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,YAAV;AAAwBC,IAAAA;AAAxB,MAAsCT,OAAO,CAAC;AAChDU,IAAAA,KAAK,EAAE,EADyC;AAEhDC,IAAAA,IAAI,EAAE,EAF0C;AAGhDC,IAAAA,QAAQ,EAAE;AAHsC,GAAD,CAAnD;AAMA,QAAM,CAACC,MAAD,EAAS;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,GAAT,IAAqCb,WAAW,CAACE,eAAD,EAAkB;AACpEY,IAAAA,SAAS,EAAEV,MADyD,CAEpE;;AAFoE,GAAlB,CAAtD;;AAKA,iBAAeW,YAAf,CAA4BC,CAA5B,EAA+B;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,GAAG,GAAG,MAAMR,MAAM,EAAxB;AACAJ,IAAAA,SAAS;AACZ,GAhB4B,CAkB7B;;;AACA,sBACI,QAAC,IAAD;AAAM,IAAA,MAAM,EAAC,MAAb;AAAoB,IAAA,QAAQ,EAAES,YAA9B;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEF;AAArB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,8BACI;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA,yCAEI;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,IAAI,EAAC,OAAzB;AAAiC,UAAA,WAAW,EAAC,oBAA7C;AAAkE,UAAA,YAAY,EAAC,OAA/E;AAAuF,UAAA,KAAK,EAAET,MAAM,CAACG,KAArG;AAA4G,UAAA,QAAQ,EAAEF;AAAtH;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA,wCAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,MAAxB;AAA+B,UAAA,WAAW,EAAC,WAA3C;AAAuD,UAAA,YAAY,EAAC,MAApE;AAA2E,UAAA,KAAK,EAAED,MAAM,CAACI,IAAzF;AAA+F,UAAA,QAAQ,EAAEH;AAAzG;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eASI;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA,4CAEI;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,IAAI,EAAC,UAA5B;AAAuC,UAAA,WAAW,EAAC,eAAnD;AAAmE,UAAA,YAAY,EAAC,UAAhF;AAA2F,UAAA,KAAK,EAAED,MAAM,CAACK,QAAzG;AAAmH,UAAA,QAAQ,EAAEJ;AAA7H;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,eAaI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH","sourcesContent":["import Form from './styles/Form';\r\nimport useForm from '../lib/useForm';\r\nimport gql from 'graphql-tag';\r\nimport { CURRENT_USER_QUERY } from './User';\r\nimport { useMutation } from '@apollo/client';\r\nimport DisplayError from './ErrorMessage';\r\n\r\nconst SIGNUP_MUTATION = gql`\r\n    mutation SIGNUP_MUTATION($email: String!, $name: String!, $password: String!){\r\n        createUser(data: {\r\n            email: $email\r\n            name: $name\r\n            password: $password\r\n        }) {\r\n            id\r\n            email\r\n            name\r\n        }\r\n    }\r\n`\r\n\r\nexport default function SignUp() {\r\n    const { inputs, handleChange, resetForm } = useForm({\r\n        email: '',\r\n        name: '',\r\n        password: ''\r\n    })\r\n\r\n    const [signup, { data, loading, error }] = useMutation(SIGNUP_MUTATION, {\r\n        variables: inputs,\r\n        // refetchQueries: [{ query: CURRENT_USER_QUERY }]\r\n    });\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault();\r\n        const res = await signup();\r\n        resetForm();\r\n    }\r\n\r\n    // const error = data?.authenticateUserWithPassword.__typename === \"UserAuthenticationWithPasswordFailure\" ? data?.authenticateUserWithPassword : undefined;\r\n    return (\r\n        <Form method=\"POST\" onSubmit={handleSubmit}>\r\n            <h2>Create an Account</h2>\r\n            <DisplayError error={error}></DisplayError>\r\n            <fieldset>\r\n                <label htmlFor=\"email\">\r\n                    Email\r\n                    <input type=\"email\" name=\"email\" placeholder=\"Your Email Address\" autoComplete=\"email\" value={inputs.email} onChange={handleChange} />\r\n                </label>\r\n                <label htmlFor=\"name\">\r\n                    Name\r\n                    <input type=\"text\" name=\"name\" placeholder=\"Your Name\" autoComplete=\"name\" value={inputs.name} onChange={handleChange} />\r\n                </label>\r\n                <label htmlFor=\"password\">\r\n                    Password\r\n                    <input type=\"password\" name=\"password\" placeholder=\"Your Password\" autoComplete=\"password\" value={inputs.password} onChange={handleChange} />\r\n                </label>\r\n                <button type=\"submit\">Sign Up</button>\r\n            </fieldset>\r\n        </Form>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}