{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\projects\\\\AdvancedReact\\\\frontend\\\\pages\\\\order\\\\[id].js\";\nimport gql from \"graphql-tag\";\nimport DisplayError from '../../components/ErrorMessage';\nimport OrderStyles from '../../components/styles/OrderStyles';\nimport Head from 'next/head';\nimport formatMoney from '../../lib/formatMoney'; //Query to receive single order by order id\n\nconst SINGLE_ORDER_QUERY = gql`\n    query SINGLE_ORDER_QUERY($id: ID!){\n        order: Order(where: { id: $id}) {\n            id\n            charge\n            total\n            user {\n                id\n            }\n            items {\n                id\n                name\n                description\n                price\n                quantity\n                photo {\n                    image {\n                        publicUrlTransformed\n                    }\n                }\n            }\n        }\n    }\n`; //Component displaying a single order on the page\n\nexport default function SingleOrderPage({\n  query\n}) {\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(SINGLE_ORDER_QUERY, {\n    variables: {\n      id: query.id\n    }\n  }); //Loading and Error state\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(DisplayError, {\n    error: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 23\n  }, this);\n  const {\n    order\n  } = data;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(OrderStyles, {\n      children: [/*#__PURE__*/_jsxDEV(Head, {\n        children: /*#__PURE__*/_jsxDEV(\"title\", {\n          children: [\"Sick Fits - \", order.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Order Id:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: order.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Charge:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: order.charge\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Order Total:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: formatMoney(order.total)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Item Count:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: order.items.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Order Id:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: order.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"items\",\n        children: order.items.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"order-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.photo.image.publicUrlTransformed,\n            alt: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Qty: \", item.quantity]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Each: \", formatMoney(item.price)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Sub Total: \", formatMoney(item.price * item.quanity)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: item.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["C:/projects/AdvancedReact/frontend/pages/order/[id].js"],"names":["gql","DisplayError","OrderStyles","Head","formatMoney","SINGLE_ORDER_QUERY","SingleOrderPage","query","data","error","loading","useQuery","variables","id","order","charge","total","items","length","map","item","photo","image","publicUrlTransformed","title","name","quantity","price","quanity","description"],"mappings":"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","sourcesContent":["import gql from \"graphql-tag\"\r\nimport DisplayError from '../../components/ErrorMessage';\r\nimport OrderStyles from '../../components/styles/OrderStyles';\r\nimport Head from 'next/head';\r\nimport formatMoney from '../../lib/formatMoney';\r\n\r\n//Query to receive single order by order id\r\nconst SINGLE_ORDER_QUERY = gql`\r\n    query SINGLE_ORDER_QUERY($id: ID!){\r\n        order: Order(where: { id: $id}) {\r\n            id\r\n            charge\r\n            total\r\n            user {\r\n                id\r\n            }\r\n            items {\r\n                id\r\n                name\r\n                description\r\n                price\r\n                quantity\r\n                photo {\r\n                    image {\r\n                        publicUrlTransformed\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`\r\n//Component displaying a single order on the page\r\nexport default function SingleOrderPage({ query }) {\r\n    const { data, error, loading } = useQuery(SINGLE_ORDER_QUERY, {\r\n        variables: { id: query.id }\r\n    })\r\n\r\n    //Loading and Error state\r\n    if (loading) return <p>Loading...</p>\r\n    if (error) return <DisplayError error={error}></DisplayError>\r\n    const { order } = data;\r\n\r\n    return (\r\n        <div>\r\n            <OrderStyles>\r\n                <Head>\r\n                    <title>Sick Fits - {order.id}</title>\r\n                </Head>\r\n                <p>\r\n                    <span>Order Id:</span>\r\n                    <span>{order.id}</span>\r\n                </p>\r\n                <p>\r\n                    <span>Charge:</span>\r\n                    <span>{order.charge}</span>\r\n                </p>\r\n                <p>\r\n                    <span>Order Total:</span>\r\n                    <span>{formatMoney(order.total)}</span>\r\n                </p>\r\n                <p>\r\n                    <span>Item Count:</span>\r\n                    <span>{order.items.length}</span>\r\n                </p>\r\n                <p>\r\n                    <span>Order Id:</span>\r\n                    <span>{order.id}</span>\r\n                </p>\r\n                <div className=\"items\">\r\n                    {order.items.map(item => (\r\n                        <div className=\"order-item\" key={item.id}>\r\n                            <img src={item.photo.image.publicUrlTransformed} alt={item.title} />\r\n                            <div className=\"item-details\">\r\n                                <h2>{item.name}</h2>\r\n                                <p>Qty: {item.quantity}</p>\r\n                                <p>Each: {formatMoney(item.price)}</p>\r\n                                <p>Sub Total: {formatMoney(item.price * item.quanity)}</p>\r\n                                <p>{item.description}</p>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </OrderStyles>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}