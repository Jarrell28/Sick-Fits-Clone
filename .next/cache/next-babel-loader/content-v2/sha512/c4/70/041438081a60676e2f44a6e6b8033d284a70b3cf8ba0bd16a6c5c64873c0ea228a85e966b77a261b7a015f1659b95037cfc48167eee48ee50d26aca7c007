{"ast":null,"code":"import _defineProperty from \"C:/projects/AdvancedReact/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:/projects/AdvancedReact/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useEffect } from 'react';\nimport { useState } from 'react'; //Helper function to create dynamic controlled input components\n\nexport default function useForm() {\n  _s();\n\n  var initial = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  //creating state object for inputs\n  var _useState = useState(initial),\n      inputs = _useState[0],\n      setInputs = _useState[1];\n\n  var initialValues = Object.values(initial).join();\n  useEffect(function () {\n    setInputs(initial);\n  }, [initialValues]);\n\n  function handleChange(e) {\n    var _e$target = e.target,\n        value = _e$target.value,\n        name = _e$target.name,\n        type = _e$target.type;\n\n    if (type === 'number') {\n      value = parseInt(value);\n    }\n\n    if (type === 'file') {\n      var _e$target$files = _slicedToArray(e.target.files, 1);\n\n      value = _e$target$files[0];\n    }\n\n    setInputs(_objectSpread(_objectSpread({}, inputs), {}, _defineProperty({}, name, value)));\n  }\n\n  function resetForm() {\n    setInputs(initial);\n  }\n\n  function clearForm() {\n    var blankState = Object.fromEntries(Object.entries(inputs).map(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          key = _ref2[0],\n          value = _ref2[1];\n\n      return [key, ''];\n    }));\n    setInputs(blankState);\n  }\n\n  return {\n    inputs: inputs,\n    handleChange: handleChange,\n    resetForm: resetForm,\n    clearForm: clearForm\n  };\n}\n\n_s(useForm, \"Ojj4hh6HHOsjtwWnkUaVb5V0o3U=\");","map":{"version":3,"sources":["C:/projects/AdvancedReact/frontend/lib/useForm.js"],"names":["useEffect","useState","useForm","initial","inputs","setInputs","initialValues","Object","values","join","handleChange","e","target","value","name","type","parseInt","files","resetForm","clearForm","blankState","fromEntries","entries","map","key"],"mappings":";;;;;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB,C,CAEA;;AACA,eAAe,SAASC,OAAT,GAA+B;AAAA;;AAAA,MAAdC,OAAc,uEAAJ,EAAI;;AAC1C;AAD0C,kBAEdF,QAAQ,CAACE,OAAD,CAFM;AAAA,MAEnCC,MAFmC;AAAA,MAE3BC,SAF2B;;AAG1C,MAAMC,aAAa,GAAGC,MAAM,CAACC,MAAP,CAAcL,OAAd,EAAuBM,IAAvB,EAAtB;AAGAT,EAAAA,SAAS,CAAC,YAAM;AACZK,IAAAA,SAAS,CAACF,OAAD,CAAT;AACH,GAFQ,EAEN,CAACG,aAAD,CAFM,CAAT;;AAKA,WAASI,YAAT,CAAsBC,CAAtB,EAAyB;AAAA,oBACOA,CAAC,CAACC,MADT;AAAA,QACfC,KADe,aACfA,KADe;AAAA,QACRC,IADQ,aACRA,IADQ;AAAA,QACFC,IADE,aACFA,IADE;;AAGrB,QAAIA,IAAI,KAAK,QAAb,EAAuB;AACnBF,MAAAA,KAAK,GAAGG,QAAQ,CAACH,KAAD,CAAhB;AACH;;AACD,QAAIE,IAAI,KAAK,MAAb,EAAqB;AAAA,2CACPJ,CAAC,CAACC,MAAF,CAASK,KADF;;AAChBJ,MAAAA,KADgB;AAEpB;;AAEDR,IAAAA,SAAS,iCACFD,MADE,2BAEJU,IAFI,EAEGD,KAFH,GAAT;AAIH;;AAED,WAASK,SAAT,GAAqB;AACjBb,IAAAA,SAAS,CAACF,OAAD,CAAT;AACH;;AAED,WAASgB,SAAT,GAAqB;AACjB,QAAMC,UAAU,GAAGb,MAAM,CAACc,WAAP,CAAmBd,MAAM,CAACe,OAAP,CAAelB,MAAf,EAAuBmB,GAAvB,CAA2B;AAAA;AAAA,UAAEC,GAAF;AAAA,UAAOX,KAAP;;AAAA,aAAkB,CAACW,GAAD,EAAM,EAAN,CAAlB;AAAA,KAA3B,CAAnB,CAAnB;AACAnB,IAAAA,SAAS,CAACe,UAAD,CAAT;AACH;;AAED,SAAO;AACHhB,IAAAA,MAAM,EAANA,MADG;AAEHM,IAAAA,YAAY,EAAZA,YAFG;AAGHQ,IAAAA,SAAS,EAATA,SAHG;AAIHC,IAAAA,SAAS,EAATA;AAJG,GAAP;AAMH;;GA1CuBjB,O","sourcesContent":["import { useEffect } from 'react';\r\nimport { useState } from 'react';\r\n\r\n//Helper function to create dynamic controlled input components\r\nexport default function useForm(initial = {}) {\r\n    //creating state object for inputs\r\n    const [inputs, setInputs] = useState(initial);\r\n    const initialValues = Object.values(initial).join();\r\n\r\n\r\n    useEffect(() => {\r\n        setInputs(initial)\r\n    }, [initialValues])\r\n\r\n\r\n    function handleChange(e) {\r\n        let { value, name, type } = e.target;\r\n\r\n        if (type === 'number') {\r\n            value = parseInt(value);\r\n        }\r\n        if (type === 'file') {\r\n            [value] = e.target.files;\r\n        }\r\n\r\n        setInputs({\r\n            ...inputs,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    function resetForm() {\r\n        setInputs(initial);\r\n    }\r\n\r\n    function clearForm() {\r\n        const blankState = Object.fromEntries(Object.entries(inputs).map(([key, value]) => [key, '']));\r\n        setInputs(blankState);\r\n    }\r\n\r\n    return {\r\n        inputs,\r\n        handleChange,\r\n        resetForm,\r\n        clearForm\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}