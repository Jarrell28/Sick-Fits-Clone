{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\projects\\\\AdvancedReact\\\\frontend\\\\components\\\\Search.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useLazyQuery } from '@apollo/client';\nimport { resetIdCounter, useCombobox } from 'downshift';\nimport gql from 'graphql-tag';\nimport debounce from 'lodash.debounce';\nimport { useRouter } from 'next/dist/client/router';\nimport Link from 'next/link';\nimport { DropDown, DropDownItem, SearchStyles } from './styles/DropDown'; //Query to search items by name or description\n\nconst SEARCH_PRODUCTS_QUERY = gql`\n    query SEARCH_PRODUCTS_QUERY($searchTerm: String!){\n        searchTerms: allProducts(where: {\n            OR: [\n                { name_contains_i: $searchTerm},\n                { description_contains_i: $searchTerm}\n            ]\n        }){\n            id\n            name\n            photo {\n                image {\n                    publicUrlTransformed\n                }\n            }\n        }\n    }\n`; //Component to implement search functionality\n\nexport default function Search() {\n  //Importing router to change page when performing a search\n  const router = useRouter(); //Data returned from performing search query\n\n  const [findItems, {\n    loading,\n    data,\n    error\n  }] = useLazyQuery(SEARCH_PRODUCTS_QUERY, {\n    fetchPolicy: 'no-cache' // bypasses the apollo client cache and always searches in the database\n\n  }); //Array containing all data returned by search query\n\n  const items = (data === null || data === void 0 ? void 0 : data.searchTerms) || []; //Debounce function to limit the amount of requests to database\n\n  const findItemsButChill = debounce(findItems, 350);\n  resetIdCounter(); //Using DownShift.js to assist with displaying a search dropdown box that displays search results\n\n  const {\n    isOpen,\n    inputValue,\n    getMenuProps,\n    getInputProps,\n    getComboboxProps,\n    getItemProps,\n    highlightedIndex\n  } = useCombobox({\n    items: items,\n\n    // items returned from search result\n    onInputValueChange() {\n      //on search bar input change, performs query search\n      findItemsButChill({\n        variables: {\n          searchTerm: inputValue\n        }\n      });\n    },\n\n    onSelectedItemChange({\n      selectedItem\n    }) {\n      // on item select, updates page\n      router.push({\n        pathname: `/product/${selectedItem.id}`\n      });\n    },\n\n    itemToString: item => item === null ? '' : item === null || item === void 0 ? void 0 : item.name //Defaults the item to a string to display name in search bar\n\n  });\n  return /*#__PURE__*/_jsxDEV(SearchStyles, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({}, getComboboxProps()), {}, {\n      children: /*#__PURE__*/_jsxDEV(\"input\", _objectSpread({}, getInputProps({\n        type: 'search',\n        placeholder: 'Search for an Item',\n        id: 'search',\n        className: loading ? 'loading' : ''\n      })), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DropDown, _objectSpread(_objectSpread({}, getMenuProps()), {}, {\n      children: [isOpen && items.map((item, index) => /*#__PURE__*/_jsxDEV(DropDownItem, _objectSpread(_objectSpread({}, getItemProps({\n        item\n      })), {}, {\n        highlighted: index === highlightedIndex,\n        onClick: () => router.push({\n          pathname: `/product/${item.id}`\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.photo.image.publicUrlTransformed,\n          alt: item.name,\n          width: \"50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this), item.name]\n      }), item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this)), isOpen && !items.length && !loading && /*#__PURE__*/_jsxDEV(DropDownItem, {\n        children: [\"Sorry, No Items found for \", inputValue]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["C:/projects/AdvancedReact/frontend/components/Search.js"],"names":["useLazyQuery","resetIdCounter","useCombobox","gql","debounce","useRouter","Link","DropDown","DropDownItem","SearchStyles","SEARCH_PRODUCTS_QUERY","Search","router","findItems","loading","data","error","fetchPolicy","items","searchTerms","findItemsButChill","isOpen","inputValue","getMenuProps","getInputProps","getComboboxProps","getItemProps","highlightedIndex","onInputValueChange","variables","searchTerm","onSelectedItemChange","selectedItem","push","pathname","id","itemToString","item","name","type","placeholder","className","map","index","photo","image","publicUrlTransformed","length"],"mappings":"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","sourcesContent":["import { useLazyQuery } from '@apollo/client';\r\nimport { resetIdCounter, useCombobox } from 'downshift'\r\nimport gql from 'graphql-tag';\r\nimport debounce from 'lodash.debounce';\r\nimport { useRouter } from 'next/dist/client/router';\r\nimport Link from 'next/link';\r\nimport { DropDown, DropDownItem, SearchStyles } from './styles/DropDown'\r\n\r\n//Query to search items by name or description\r\nconst SEARCH_PRODUCTS_QUERY = gql`\r\n    query SEARCH_PRODUCTS_QUERY($searchTerm: String!){\r\n        searchTerms: allProducts(where: {\r\n            OR: [\r\n                { name_contains_i: $searchTerm},\r\n                { description_contains_i: $searchTerm}\r\n            ]\r\n        }){\r\n            id\r\n            name\r\n            photo {\r\n                image {\r\n                    publicUrlTransformed\r\n                }\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\n//Component to implement search functionality\r\nexport default function Search() {\r\n    //Importing router to change page when performing a search\r\n    const router = useRouter();\r\n\r\n    //Data returned from performing search query\r\n    const [findItems, { loading, data, error }] = useLazyQuery(SEARCH_PRODUCTS_QUERY, {\r\n        fetchPolicy: 'no-cache' // bypasses the apollo client cache and always searches in the database\r\n    })\r\n\r\n    //Array containing all data returned by search query\r\n    const items = data?.searchTerms || [];\r\n\r\n    //Debounce function to limit the amount of requests to database\r\n    const findItemsButChill = debounce(findItems, 350);\r\n\r\n    resetIdCounter();\r\n\r\n    //Using DownShift.js to assist with displaying a search dropdown box that displays search results\r\n    const { isOpen, inputValue, getMenuProps, getInputProps, getComboboxProps, getItemProps, highlightedIndex } = useCombobox({\r\n\r\n        items: items, // items returned from search result\r\n        onInputValueChange() { //on search bar input change, performs query search\r\n            findItemsButChill({\r\n                variables: {\r\n                    searchTerm: inputValue,\r\n                }\r\n            });\r\n        },\r\n        onSelectedItemChange({ selectedItem }) { // on item select, updates page\r\n            router.push({\r\n                pathname: `/product/${selectedItem.id}`\r\n            })\r\n        },\r\n        itemToString: item => item === null ? '' : item?.name //Defaults the item to a string to display name in search bar\r\n\r\n    });\r\n\r\n    return (\r\n        <SearchStyles>\r\n            {/* DownShift.js variables passed to elements */}\r\n            <div {...getComboboxProps()}>\r\n                <input {...getInputProps({\r\n                    type: 'search',\r\n                    placeholder: 'Search for an Item',\r\n                    id: 'search',\r\n                    className: loading ? 'loading' : ''\r\n                })} />\r\n            </div>\r\n            {/* DropDown, DropDownItem are custom styled components */}\r\n            <DropDown {...getMenuProps()}>\r\n\r\n                {/* isOpen used to verify if the searchbar is active */}\r\n                {/* Loops over the items returned from query search and displays dropdown list */}\r\n                {isOpen && items.map((item, index) => (\r\n                    <DropDownItem key={item.id} {...getItemProps({ item })} highlighted={index === highlightedIndex} onClick={() => router.push({ pathname: `/product/${item.id}` })}>\r\n                        <img src={item.photo.image.publicUrlTransformed} alt={item.name} width=\"50\" />\r\n                        {item.name}\r\n                    </DropDownItem>\r\n                ))}\r\n                {isOpen && !items.length && !loading && (\r\n                    <DropDownItem>Sorry, No Items found for {inputValue}</DropDownItem>\r\n                )}\r\n            </DropDown>\r\n        </SearchStyles>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}