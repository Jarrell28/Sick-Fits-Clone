{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\projects\\\\AdvancedReact\\\\frontend\\\\lib\\\\cartState.js\";\nimport { useState } from \"react\";\nimport { useContext } from \"react\";\nimport { createContext } from \"react\"; //Using Context API to make Cart state available throughout application\n\nconst LocalStateContext = /*#__PURE__*/createContext();\nconst LocalStateProvider = LocalStateContext.Provider; //function to establish provider and helper methods\n\nfunction CartStateProvider({\n  children\n}) {\n  const {\n    0: cartOpen,\n    1: setCartOpen\n  } = useState(false);\n\n  function toggleCart() {\n    setCartOpen(!cartOpen);\n  }\n\n  function closeCart() {\n    setCartOpen(false);\n  }\n\n  function openCart() {\n    setCartOpen(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(LocalStateProvider, {\n    value: {\n      cartOpen,\n      setCartOpen,\n      toggleCart,\n      closeCart,\n      openCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 12\n  }, this);\n} //custom hook for accessing cart\n\n\nfunction useCart() {\n  const all = useContext(LocalStateContext);\n  return all;\n}\n\nexport { CartStateProvider, useCart };","map":{"version":3,"sources":["C:/projects/AdvancedReact/frontend/lib/cartState.js"],"names":["useState","useContext","createContext","LocalStateContext","LocalStateProvider","Provider","CartStateProvider","children","cartOpen","setCartOpen","toggleCart","closeCart","openCart","useCart","all"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,aAAT,QAA8B,OAA9B,C,CAEA;;AACA,MAAMC,iBAAiB,gBAAGD,aAAa,EAAvC;AACA,MAAME,kBAAkB,GAAGD,iBAAiB,CAACE,QAA7C,C,CAEA;;AACA,SAASC,iBAAT,CAA2B;AAAEC,EAAAA;AAAF,CAA3B,EAAyC;AAErC,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BT,QAAQ,CAAC,KAAD,CAAxC;;AAEA,WAASU,UAAT,GAAsB;AAClBD,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACH;;AAED,WAASG,SAAT,GAAqB;AACjBF,IAAAA,WAAW,CAAC,KAAD,CAAX;AACH;;AAED,WAASG,QAAT,GAAoB;AAChBH,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH;;AAED,sBAAO,QAAC,kBAAD;AAAoB,IAAA,KAAK,EAAE;AAAED,MAAAA,QAAF;AAAYC,MAAAA,WAAZ;AAAyBC,MAAAA,UAAzB;AAAqCC,MAAAA,SAArC;AAAgDC,MAAAA;AAAhD,KAA3B;AAAA,cAAwFL;AAAxF;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,C,CAGD;;;AACA,SAASM,OAAT,GAAmB;AACf,QAAMC,GAAG,GAAGb,UAAU,CAACE,iBAAD,CAAtB;AACA,SAAOW,GAAP;AACH;;AAED,SAASR,iBAAT,EAA4BO,OAA5B","sourcesContent":["import { useState } from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { createContext } from \"react\";\r\n\r\n//Using Context API to make Cart state available throughout application\r\nconst LocalStateContext = createContext();\r\nconst LocalStateProvider = LocalStateContext.Provider;\r\n\r\n//function to establish provider and helper methods\r\nfunction CartStateProvider({ children }) {\r\n\r\n    const [cartOpen, setCartOpen] = useState(false);\r\n\r\n    function toggleCart() {\r\n        setCartOpen(!cartOpen);\r\n    }\r\n\r\n    function closeCart() {\r\n        setCartOpen(false);\r\n    }\r\n\r\n    function openCart() {\r\n        setCartOpen(true);\r\n    }\r\n\r\n    return <LocalStateProvider value={{ cartOpen, setCartOpen, toggleCart, closeCart, openCart }}>{children}</LocalStateProvider>\r\n}\r\n\r\n\r\n//custom hook for accessing cart\r\nfunction useCart() {\r\n    const all = useContext(LocalStateContext);\r\n    return all;\r\n}\r\n\r\nexport { CartStateProvider, useCart };"]},"metadata":{},"sourceType":"module"}