{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport _slicedToArray from \"C:/projects/AdvancedReact/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:/projects/AdvancedReact/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation ADD_TO_CART_MUTATION($id: ID!) {\\n        addToCart(productId: $id){\\n            id\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useMutation } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport { CURRENT_USER_QUERY } from './User'; //Query that takes product ID and adds the id to cart table\n\nvar ADD_TO_CART_MUTATION = gql(_templateObject()); //Add to cart button that takes in product id as argument\n\nexport default function AddToCart(_ref) {\n  var id = _ref.id;\n\n  var _useMutation = useMutation(ADD_TO_CART_MUTATION, {\n    variables: {\n      id: id\n    },\n    refetchQueries: [{\n      query: CURRENT_USER_QUERY\n    }] //refetchQueries updates the apollo client with the new data from mutation so no refresh is required\n\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      addToCart = _useMutation2[0],\n      loading = _useMutation2[1].loading;\n\n  return (\n    /*#__PURE__*/\n    //using loading variable to display indication the application is adding to cart\n    _jsxs(\"button\", {\n      disabled: loading,\n      type: \"button\",\n      onClick: addToCart,\n      children: [\"Add\", loading && 'ing', \" To Cart!\"]\n    })\n  );\n}","map":null,"metadata":{},"sourceType":"module"}