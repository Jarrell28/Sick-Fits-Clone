{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport Form from './styles/Form';\nimport useForm from '../lib/useForm';\nimport gql from 'graphql-tag';\nimport { CURRENT_USER_QUERY } from './User';\nimport { useMutation } from '@apollo/client';\nimport DisplayError from './ErrorMessage'; //Query to perform Sign in\n\nconst SIGNIN_MUTATION = gql`\n    mutation SIGNIN_MUTATION($email: String!, $password: String!){\n        authenticateUserWithPassword(email: $email, password: $password){\n            ... on UserAuthenticationWithPasswordSuccess{\n                item {\n                    id\n                    email\n                    name\n                }\n            }\n\n            ... on UserAuthenticationWithPasswordFailure {\n                code\n                message\n            }\n        }\n    }\n`;\nexport default function SignIn() {\n  //Setting initial values for form inputs\n  const {\n    inputs,\n    handleChange,\n    resetForm\n  } = useForm({\n    email: '',\n    password: ''\n  }); //submitting input values to backend\n\n  const [signin, {\n    data,\n    loading\n  }] = useMutation(SIGNIN_MUTATION, {\n    variables: inputs,\n    refetchQueries: [{\n      query: CURRENT_USER_QUERY\n    }] //refetchQueries updates the apollo client with the new data from mutation so no refresh is required\n\n  }); //handling submission\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    const res = await signin();\n    resetForm();\n  } //accounting for different authentication errors received\n\n\n  const error = (data === null || data === void 0 ? void 0 : data.authenticateUserWithPassword.__typename) === \"UserAuthenticationWithPasswordFailure\" ? data === null || data === void 0 ? void 0 : data.authenticateUserWithPassword : undefined;\n  return /*#__PURE__*/_jsxs(Form, {\n    method: \"POST\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsx(\"h2\", {\n      children: \"Sign Into Your Account\"\n    }), /*#__PURE__*/_jsx(DisplayError, {\n      error: error\n    }), /*#__PURE__*/_jsxs(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxs(\"label\", {\n        htmlFor: \"email\",\n        children: [\"Email\", /*#__PURE__*/_jsx(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Your Email Address\",\n          autoComplete: \"email\",\n          value: inputs.email,\n          onChange: handleChange\n        })]\n      }), /*#__PURE__*/_jsxs(\"label\", {\n        htmlFor: \"password\",\n        children: [\"Password\", /*#__PURE__*/_jsx(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Your Password\",\n          autoComplete: \"password\",\n          value: inputs.password,\n          onChange: handleChange\n        })]\n      }), /*#__PURE__*/_jsx(\"button\", {\n        type: \"submit\",\n        children: \"Sign In\"\n      })]\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}