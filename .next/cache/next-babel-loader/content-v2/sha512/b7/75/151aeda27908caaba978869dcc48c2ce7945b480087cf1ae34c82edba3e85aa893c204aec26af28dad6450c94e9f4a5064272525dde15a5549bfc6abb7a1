{"ast":null,"code":"import _regeneratorRuntime from \"C:/projects/AdvancedReact/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"C:/projects/AdvancedReact/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:/projects/AdvancedReact/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:/projects/AdvancedReact/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\projects\\\\AdvancedReact\\\\frontend\\\\components\\\\Reset.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation RESET_MUTATION($email: String!, $token: String!, $password: String!){\\n        redeemUserPasswordResetToken(email: $email, token: $token, password: $password) {\\n            code\\n            message\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Form from './styles/Form';\nimport useForm from '../lib/useForm';\nimport gql from 'graphql-tag';\nimport { CURRENT_USER_QUERY } from './User';\nimport { useMutation } from '@apollo/client';\nimport DisplayError from './ErrorMessage';\nvar RESET_MUTATION = gql(_templateObject());\nexport default function Reset() {\n  _s();\n\n  var _data$redeemUserPassw;\n\n  var _useForm = useForm({\n    email: '',\n    password: '',\n    token: ''\n  }),\n      inputs = _useForm.inputs,\n      handleChange = _useForm.handleChange,\n      resetForm = _useForm.resetForm;\n\n  var _useMutation = useMutation(RESET_MUTATION, {\n    variables: inputs // refetchQueries: [{ query: CURRENT_USER_QUERY }]\n\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      reset = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      data = _useMutation2$.data,\n      loading = _useMutation2$.loading;\n\n  function handleSubmit(_x) {\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  function _handleSubmit() {\n    _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              _context.next = 3;\n              return reset()[\"catch\"](console.error);\n\n            case 3:\n              res = _context.sent;\n              console.log(res);\n              resetForm();\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  var error = data !== null && data !== void 0 && (_data$redeemUserPassw = data.redeemUserPasswordResetToken) !== null && _data$redeemUserPassw !== void 0 && _data$redeemUserPassw.code ? data === null || data === void 0 ? void 0 : data.redeemUserPasswordResetToken : undefined;\n  return /*#__PURE__*/_jsxDEV(Form, {\n    method: \"POST\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reset Your Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DisplayError, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [(data === null || data === void 0 ? void 0 : data.redeemUserPasswordResetToken) === null && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Password Reset Complete! Please sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Your Email Address\",\n          autoComplete: \"email\",\n          value: inputs.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: [\"Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Your Password\",\n          autoComplete: \"password\",\n          value: inputs.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Request Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Reset, \"alDvxMuZNB4mp77alRXABwWf3Ek=\", false, function () {\n  return [useForm, useMutation];\n});\n\n_c = Reset;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reset\");","map":{"version":3,"sources":["C:/projects/AdvancedReact/frontend/components/Reset.js"],"names":["Form","useForm","gql","CURRENT_USER_QUERY","useMutation","DisplayError","RESET_MUTATION","Reset","email","password","token","inputs","handleChange","resetForm","variables","reset","data","loading","handleSubmit","e","preventDefault","console","error","res","log","redeemUserPasswordResetToken","code","undefined"],"mappings":"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","sourcesContent":["import Form from './styles/Form';\r\nimport useForm from '../lib/useForm';\r\nimport gql from 'graphql-tag';\r\nimport { CURRENT_USER_QUERY } from './User';\r\nimport { useMutation } from '@apollo/client';\r\nimport DisplayError from './ErrorMessage';\r\n\r\nconst RESET_MUTATION = gql`\r\n    mutation RESET_MUTATION($email: String!, $token: String!, $password: String!){\r\n        redeemUserPasswordResetToken(email: $email, token: $token, password: $password) {\r\n            code\r\n            message\r\n        }\r\n    }\r\n`\r\n\r\nexport default function Reset() {\r\n    const { inputs, handleChange, resetForm } = useForm({\r\n        email: '',\r\n        password: '',\r\n        token: ''\r\n    })\r\n\r\n    const [reset, { data, loading }] = useMutation(RESET_MUTATION, {\r\n        variables: inputs,\r\n        // refetchQueries: [{ query: CURRENT_USER_QUERY }]\r\n    });\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault();\r\n        const res = await reset().catch(console.error);\r\n        console.log(res);\r\n        resetForm();\r\n    }\r\n\r\n    const error = data?.redeemUserPasswordResetToken?.code ? data?.redeemUserPasswordResetToken : undefined;\r\n    return (\r\n        <Form method=\"POST\" onSubmit={handleSubmit}>\r\n            <h2>Reset Your Password</h2>\r\n            <DisplayError error={error}></DisplayError>\r\n            <fieldset>\r\n                {data?.redeemUserPasswordResetToken === null && (\r\n                    <p>Password Reset Complete! Please sign in</p>\r\n                )}\r\n                <label htmlFor=\"email\">\r\n                    Email\r\n                    <input type=\"email\" name=\"email\" placeholder=\"Your Email Address\" autoComplete=\"email\" value={inputs.email} onChange={handleChange} />\r\n                </label>\r\n                <label htmlFor=\"password\">\r\n                    Password\r\n                    <input type=\"password\" name=\"password\" placeholder=\"Your Password\" autoComplete=\"password\" value={inputs.password} onChange={handleChange} />\r\n                </label>\r\n                <button type=\"submit\">Request Reset</button>\r\n            </fieldset>\r\n        </Form>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}