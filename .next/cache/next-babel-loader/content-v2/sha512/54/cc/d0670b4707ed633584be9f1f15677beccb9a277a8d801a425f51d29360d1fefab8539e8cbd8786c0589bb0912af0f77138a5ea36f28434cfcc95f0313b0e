{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _taggedTemplateLiteral from \"C:/projects/AdvancedReact/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\projects\\\\AdvancedReact\\\\frontend\\\\pages\\\\orders.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query USERS_ORDERS_QUERY{\\n        allOrders {\\n            id\\n            charge\\n            total\\n            user {\\n                id\\n            }\\n            items {\\n                id\\n                name\\n                description\\n                price\\n                quantity\\n                photo {\\n                    image {\\n                        publicUrlTransformed\\n                    }\\n                }\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from \"graphql-tag\";\nimport DisplayError from '../components/ErrorMessage';\nimport OrderStyles from '../components/styles/OrderStyles';\nimport OrderItemStyles from '../components/styles/OrderItemStyles';\nimport Head from 'next/head';\nimport formatMoney from '../lib/formatMoney';\nimport { useQuery } from \"@apollo/client\";\nimport styled from \"styled-components\"; //Query to receive single order by order id\n\nvar USERS_ORDERS_QUERY = gql(_templateObject());\nvar OrderUl = styled.ul.withConfig({\n  displayName: \"orders__OrderUl\",\n  componentId: \"sc-15udvsj-0\"\n})([\"display:grid;grid-template-columns:repeat(auto-fit,minmax(350px,1fr));grid-gap:4rem;\"]); //Component displaying a single order on the page\n\n_c = OrderUl;\nexport default function OrdersPage() {\n  _s();\n\n  var _this = this;\n\n  var _useQuery = useQuery(USERS_ORDERS_QUERY),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading; //Loading and Error state\n\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(DisplayError, {\n    error: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 23\n  }, this);\n  var allOrders = data.allOrders;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"You have \", allOrders.length, \" orders!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(OrderUl, {\n      children: allOrders.map(function (order) {\n        return /*#__PURE__*/_jsxDEV(OrderItemStyles, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(OrdersPage, \"eE+cqeCo2lkI//dPlCsO1rICVGU=\", false, function () {\n  return [useQuery];\n});\n\n_c2 = OrdersPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"OrderUl\");\n$RefreshReg$(_c2, \"OrdersPage\");","map":{"version":3,"sources":["C:/projects/AdvancedReact/frontend/pages/orders.js"],"names":["gql","DisplayError","OrderStyles","OrderItemStyles","Head","formatMoney","useQuery","styled","USERS_ORDERS_QUERY","OrderUl","ul","OrdersPage","data","error","loading","allOrders","length","map","order"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AACA,OAAOC,eAAP,MAA4B,sCAA5B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEA;;AACA,IAAMC,kBAAkB,GAAGR,GAAH,mBAAxB;AAyBA,IAAMS,OAAO,GAAGF,MAAM,CAACG,EAAV;AAAA;AAAA;AAAA,4FAAb,C,CAMA;;KANMD,O;AAON,eAAe,SAASE,UAAT,GAAsB;AAAA;;AAAA;;AAAA,kBACAL,QAAQ,CAACE,kBAAD,CADR;AAAA,MACzBI,IADyB,aACzBA,IADyB;AAAA,MACnBC,KADmB,aACnBA,KADmB;AAAA,MACZC,OADY,aACZA,OADY,EAGjC;;;AACA,MAAIA,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO,QAAC,YAAD;AAAc,IAAA,KAAK,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,UAAP;AALsB,MAMzBE,SANyB,GAMXH,IANW,CAMzBG,SANyB;AAQjC,sBACI;AAAA,4BACI;AAAA,8BAAcA,SAAS,CAACC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,OAAD;AAAA,gBACKD,SAAS,CAACE,GAAV,CAAc,UAAAC,KAAK;AAAA,4BAChB,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,iBADgB;AAAA,OAAnB;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GApBuBP,U;UACaL,Q;;;MADbK,U","sourcesContent":["import gql from \"graphql-tag\"\r\nimport DisplayError from '../components/ErrorMessage';\r\nimport OrderStyles from '../components/styles/OrderStyles';\r\nimport OrderItemStyles from '../components/styles/OrderItemStyles';\r\nimport Head from 'next/head';\r\nimport formatMoney from '../lib/formatMoney';\r\nimport { useQuery } from \"@apollo/client\";\r\nimport styled from \"styled-components\";\r\n\r\n//Query to receive single order by order id\r\nconst USERS_ORDERS_QUERY = gql`\r\n    query USERS_ORDERS_QUERY{\r\n        allOrders {\r\n            id\r\n            charge\r\n            total\r\n            user {\r\n                id\r\n            }\r\n            items {\r\n                id\r\n                name\r\n                description\r\n                price\r\n                quantity\r\n                photo {\r\n                    image {\r\n                        publicUrlTransformed\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nconst OrderUl = styled.ul`\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\r\n    grid-gap: 4rem;\r\n`\r\n\r\n//Component displaying a single order on the page\r\nexport default function OrdersPage() {\r\n    const { data, error, loading } = useQuery(USERS_ORDERS_QUERY);\r\n\r\n    //Loading and Error state\r\n    if (loading) return <p>Loading...</p>\r\n    if (error) return <DisplayError error={error}></DisplayError>\r\n    const { allOrders } = data;\r\n\r\n    return (\r\n        <div>\r\n            <h2>You have {allOrders.length} orders!</h2>\r\n            <OrderUl>\r\n                {allOrders.map(order => (\r\n                    <OrderItemStyles>\r\n\r\n                    </OrderItemStyles>\r\n                ))}\r\n            </OrderUl>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}