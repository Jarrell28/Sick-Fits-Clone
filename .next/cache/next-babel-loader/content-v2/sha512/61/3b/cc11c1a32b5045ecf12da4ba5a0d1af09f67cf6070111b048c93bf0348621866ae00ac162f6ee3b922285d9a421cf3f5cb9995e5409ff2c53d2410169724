{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"C:/projects/AdvancedReact/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/projects/AdvancedReact/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:/projects/AdvancedReact/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:/projects/AdvancedReact/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation CREATE_PRODUCT_MUTATION(\\n        #which variables are getting passed in and the type\\n        $name: String!\\n        $description: String!\\n        $price: Int!\\n        $image: Upload\\n    ){\\n        createProduct(data:{\\n            name: $name,\\n            description: $description,\\n            price: $price,\\n            status: \\\"AVAILABLE\\\",\\n            photo: {\\n                create: {\\n                    image: $image,\\n                    altText: $name\\n                }\\n            }\\n        }) {\\n            id\\n            price\\n            description\\n            name\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport useForm from '../lib/useForm';\nimport Form from './styles/Form';\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/client';\nimport DisplayError from './ErrorMessage';\nimport { ALL_PRODUCTS_QUERY } from './Products';\nimport Router from 'next/router'; //GraphQL query to create new product\n\nvar CREATE_PRODUCT_MUTATION = gql(_templateObject()); //Component to create new product\n\nexport default function CreateProduct() {\n  //Passing initial values to form inputs\n  var _useForm = useForm({\n    name: '',\n    price: 0,\n    description: '',\n    image: ''\n  }),\n      inputs = _useForm.inputs,\n      handleChange = _useForm.handleChange,\n      resetForm = _useForm.resetForm,\n      clearForm = _useForm.clearForm; //Using mutation hook to create new product\n\n\n  var _useMutation = useMutation(CREATE_PRODUCT_MUTATION, {\n    variables: inputs,\n    refetchQueries: [{\n      query: ALL_PRODUCTS_QUERY\n    }] //refetchQueries updates the apollo client with the new data from mutation so no refresh is required\n\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      createProduct = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      loading = _useMutation2$.loading,\n      error = _useMutation2$.error,\n      data = _useMutation2$.data;\n\n  return (\n    /*#__PURE__*/\n    //using createProduct function returned by useMutation hook\n    _jsxs(Form, {\n      onSubmit: /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n          var res;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  e.preventDefault();\n                  _context.next = 3;\n                  return createProduct();\n\n                case 3:\n                  res = _context.sent;\n                  clearForm(); //After creating product, redirects page to the newly created product \n\n                  Router.push({\n                    pathname: \"/product/\".concat(res.data.createProduct.id)\n                  });\n\n                case 6:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }(),\n      children: [/*#__PURE__*/_jsx(DisplayError, {\n        error: error\n      }), /*#__PURE__*/_jsxs(\"fieldset\", {\n        disabled: loading,\n        \"aria-busy\": loading,\n        children: [/*#__PURE__*/_jsxs(\"label\", {\n          htmlFor: \"image\",\n          children: [\"Image: \", /*#__PURE__*/_jsx(\"input\", {\n            type: \"file\",\n            required: true,\n            id: \"image\",\n            name: \"image\",\n            onChange: handleChange\n          })]\n        }), /*#__PURE__*/_jsxs(\"label\", {\n          htmlFor: \"name\",\n          children: [\"Name: \", /*#__PURE__*/_jsx(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            name: \"name\",\n            placeholder: \"Name\",\n            value: inputs.name,\n            onChange: handleChange\n          })]\n        }), /*#__PURE__*/_jsxs(\"label\", {\n          htmlFor: \"price\",\n          children: [\"Price: \", /*#__PURE__*/_jsx(\"input\", {\n            type: \"number\",\n            id: \"price\",\n            name: \"price\",\n            placeholder: \"Price\",\n            value: inputs.price,\n            onChange: handleChange\n          })]\n        }), /*#__PURE__*/_jsxs(\"label\", {\n          htmlFor: \"description\",\n          children: [\"Description: \", /*#__PURE__*/_jsx(\"textarea\", {\n            id: \"description\",\n            name: \"description\",\n            placeholder: \"Description\",\n            value: inputs.description,\n            onChange: handleChange\n          })]\n        }), /*#__PURE__*/_jsx(\"button\", {\n          type: \"submit\",\n          children: \"+ Add Product\"\n        })]\n      })]\n    })\n  );\n}","map":null,"metadata":{},"sourceType":"module"}