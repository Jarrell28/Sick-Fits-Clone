{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\projects\\\\AdvancedReact\\\\frontend\\\\components\\\\UpdateProduct.js\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport DisplayError from \"./ErrorMessage\";\nconst SINGLE_PRODUCT_QUERY = gql`\n    query SINGLE_PRODUCT_QUERY($id: ID!){\n        Product(where: {\n            id:$id\n        }) {\n            id\n            name\n            description\n            price\n        }\n    }\n`;\nconst UPDATE_PRODUCT_MUTATION = gql`\n    mutation UPDATE_PRODUCT_MUTATION(\n        $id: ID!\n        $name: String\n        $description: String\n        $price: Int   \n    ) {\n        updateProduct(\n            id: $id,\n            data: {\n                id: $id\n                name: $name\n                description: $description\n                price: $price\n            }\n        ) {\n            id\n            name\n            description\n            price\n        }\n    }\n`;\nexport default function UpdateProduct({\n  id\n}) {\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(SINGLE_PRODUCT_QUERY, {\n    variables: {\n      id: id\n    }\n  });\n  const [updateProduct, {\n    data: updateData,\n    error: updateError,\n    loading: updateLoading\n  }] = useMutation(UPDATE_PRODUCT_MUTATION, {\n    variables: {\n      id: id\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(DisplayError, {\n    error: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Update\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["C:/projects/AdvancedReact/frontend/components/UpdateProduct.js"],"names":["useMutation","useQuery","gql","DisplayError","SINGLE_PRODUCT_QUERY","UPDATE_PRODUCT_MUTATION","UpdateProduct","id","data","error","loading","variables","updateProduct","updateData","updateError","updateLoading"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,gBAAtC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAGA,MAAMC,oBAAoB,GAAGF,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;AAaA,MAAMG,uBAAuB,GAAGH,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAtBA;AAwBA,eAAe,SAASI,aAAT,CAAuB;AAAEC,EAAAA;AAAF,CAAvB,EAA+B;AAC1C,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA2BT,QAAQ,CACrCG,oBADqC,EACf;AACtBO,IAAAA,SAAS,EAAE;AAAEJ,MAAAA,EAAE,EAAEA;AAAN;AADW,GADe,CAAzC;AAIA,QAAM,CAACK,aAAD,EAAgB;AAAEJ,IAAAA,IAAI,EAAEK,UAAR;AAAoBJ,IAAAA,KAAK,EAAEK,WAA3B;AAAwCJ,IAAAA,OAAO,EAAEK;AAAjD,GAAhB,IAAoFf,WAAW,CAACK,uBAAD,EAA0B;AAC3HM,IAAAA,SAAS,EAAE;AACPJ,MAAAA,EAAE,EAAEA;AADG;AADgH,GAA1B,CAArG;AAMA,MAAIG,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO,QAAC,YAAD;AAAc,IAAA,KAAK,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,UAAP;AACX,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH","sourcesContent":["import { useMutation, useQuery } from \"@apollo/client\"\r\nimport gql from \"graphql-tag\"\r\nimport DisplayError from \"./ErrorMessage\"\r\n\r\n\r\nconst SINGLE_PRODUCT_QUERY = gql`\r\n    query SINGLE_PRODUCT_QUERY($id: ID!){\r\n        Product(where: {\r\n            id:$id\r\n        }) {\r\n            id\r\n            name\r\n            description\r\n            price\r\n        }\r\n    }\r\n`\r\n\r\nconst UPDATE_PRODUCT_MUTATION = gql`\r\n    mutation UPDATE_PRODUCT_MUTATION(\r\n        $id: ID!\r\n        $name: String\r\n        $description: String\r\n        $price: Int   \r\n    ) {\r\n        updateProduct(\r\n            id: $id,\r\n            data: {\r\n                id: $id\r\n                name: $name\r\n                description: $description\r\n                price: $price\r\n            }\r\n        ) {\r\n            id\r\n            name\r\n            description\r\n            price\r\n        }\r\n    }\r\n`\r\n\r\nexport default function UpdateProduct({ id }) {\r\n    const { data, error, loading } = useQuery(\r\n        SINGLE_PRODUCT_QUERY, {\r\n        variables: { id: id }\r\n    })\r\n    const [updateProduct, { data: updateData, error: updateError, loading: updateLoading }] = useMutation(UPDATE_PRODUCT_MUTATION, {\r\n        variables: {\r\n            id: id\r\n        }\r\n    })\r\n\r\n    if (loading) return <p>loading...</p>\r\n    if (error) return <DisplayError error={error} />\r\n    return (\r\n        <div>Update</div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}