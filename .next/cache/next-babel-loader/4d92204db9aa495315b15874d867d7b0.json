{"ast":null,"code":"import _regeneratorRuntime from \"C:/projects/AdvancedReact/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/projects/AdvancedReact/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:/projects/AdvancedReact/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\projects\\\\AdvancedReact\\\\frontend\\\\pages\\\\_app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport NProgress from 'nprogress';\nimport Page from \"../components/Page\";\nimport Router from 'next/router';\nimport withData from '../lib/withData';\nRouter.events.on('routeChangeStart', function () {\n  return NProgress.start();\n});\nRouter.events.on('routeChangeComplete', function () {\n  return NProgress.done();\n});\nRouter.events.on('routeChangeError', function () {\n  return NProgress.done();\n}); // TODO: Swap with own css\n\nimport '../components/styles/nprogress.css';\nimport { ApolloProvider } from '@apollo/client';\n\nfunction myApp(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps,\n      apollo = _ref.apollo;\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: apollo,\n    children: /*#__PURE__*/_jsxDEV(Page, {\n      children: /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n\nMyApp.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n    var Component, ctx, pageProps;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            Component = _ref2.Component, ctx = _ref2.ctx;\n            pageProps = {};\n\n            if (!Component.getInitialProps) {\n              _context.next = 6;\n              break;\n            }\n\n            _context.next = 5;\n            return Component.getInitialProps(ctx);\n\n          case 5:\n            pageProps = _context.sent;\n\n          case 6:\n            pageProps.query = ctx.query;\n            return _context.abrupt(\"return\", {\n              pageProps: pageProps\n            });\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default withData(myApp);","map":{"version":3,"sources":["C:/projects/AdvancedReact/frontend/pages/_app.js"],"names":["NProgress","Page","Router","withData","events","on","start","done","ApolloProvider","myApp","Component","pageProps","apollo","MyApp","getInitialProps","ctx","query"],"mappings":";;;;;;;;;;AAAA,OAAOA,SAAP,MAAsB,WAAtB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AAEAD,MAAM,CAACE,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqC;AAAA,SAAML,SAAS,CAACM,KAAV,EAAN;AAAA,CAArC;AACAJ,MAAM,CAACE,MAAP,CAAcC,EAAd,CAAiB,qBAAjB,EAAwC;AAAA,SAAML,SAAS,CAACO,IAAV,EAAN;AAAA,CAAxC;AACAL,MAAM,CAACE,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqC;AAAA,SAAML,SAAS,CAACO,IAAV,EAAN;AAAA,CAArC,E,CAEA;;AACA,OAAO,oCAAP;AACA,SAASC,cAAT,QAA+B,gBAA/B;;AAEA,SAASC,KAAT,OAAiD;AAAA,MAAhCC,SAAgC,QAAhCA,SAAgC;AAAA,MAArBC,SAAqB,QAArBA,SAAqB;AAAA,MAAVC,MAAU,QAAVA,MAAU;AAC7C,sBACI,QAAC,cAAD;AAAgB,IAAA,MAAM,EAAEA,MAAxB;AAAA,2BACI,QAAC,IAAD;AAAA,6BACI,QAAC,SAAD,oBAAeD,SAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;AAEDE,KAAK,CAACC,eAAN;AAAA,uEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkBJ,YAAAA,SAAlB,SAAkBA,SAAlB,EAA6BK,GAA7B,SAA6BA,GAA7B;AAChBJ,YAAAA,SADgB,GACJ,EADI;;AAAA,iBAGhBD,SAAS,CAACI,eAHM;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAIEJ,SAAS,CAACI,eAAV,CAA0BC,GAA1B,CAJF;;AAAA;AAIhBJ,YAAAA,SAJgB;;AAAA;AAOpBA,YAAAA,SAAS,CAACK,KAAV,GAAkBD,GAAG,CAACC,KAAtB;AAPoB,6CAQb;AAAEL,cAAAA,SAAS,EAATA;AAAF,aARa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;AAWA,eAAeR,QAAQ,CAACM,KAAD,CAAvB","sourcesContent":["import NProgress from 'nprogress';\r\nimport Page from \"../components/Page\";\r\nimport Router from 'next/router';\r\nimport withData from '../lib/withData';\r\n\r\nRouter.events.on('routeChangeStart', () => NProgress.start());\r\nRouter.events.on('routeChangeComplete', () => NProgress.done());\r\nRouter.events.on('routeChangeError', () => NProgress.done());\r\n\r\n// TODO: Swap with own css\r\nimport '../components/styles/nprogress.css';\r\nimport { ApolloProvider } from '@apollo/client';\r\n\r\nfunction myApp({ Component, pageProps, apollo }) {\r\n    return (\r\n        <ApolloProvider client={apollo}>\r\n            <Page>\r\n                <Component {...pageProps} />\r\n            </Page>\r\n        </ApolloProvider>\r\n    )\r\n}\r\n\r\nMyApp.getInitialProps = async function ({ Component, ctx }) {\r\n    let pageProps = {};\r\n\r\n    if (Component.getInitialProps) {\r\n        pageProps = await Component.getInitialProps(ctx);\r\n    }\r\n\r\n    pageProps.query = ctx.query;\r\n    return { pageProps };\r\n}\r\n\r\nexport default withData(myApp);"]},"metadata":{},"sourceType":"module"}