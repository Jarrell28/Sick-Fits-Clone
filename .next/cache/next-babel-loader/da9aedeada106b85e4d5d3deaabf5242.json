{"ast":null,"code":"import { PAGINATION_QUERY } from '../components/Pagination';\nexport default function paginationField() {\n  return {\n    keyArgs: false,\n\n    read(existing = [], {\n      args,\n      cache\n    }) {\n      var _data$_allProductsMet;\n\n      const {\n        skip,\n        first\n      } = args;\n      const data = cache.readQuery({\n        query: PAGINATION_QUERY\n      });\n      const count = data === null || data === void 0 ? void 0 : (_data$_allProductsMet = data._allProductsMeta) === null || _data$_allProductsMet === void 0 ? void 0 : _data$_allProductsMet.count;\n      const page = skip / first + 1;\n      const pages = Math.ceil(count / first);\n    },\n\n    merge() {}\n\n  };\n}","map":{"version":3,"sources":["C:/projects/AdvancedReact/frontend/lib/paginationField.js"],"names":["PAGINATION_QUERY","paginationField","keyArgs","read","existing","args","cache","skip","first","data","readQuery","query","count","_allProductsMeta","page","pages","Math","ceil","merge"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,0BAAjC;AAEA,eAAe,SAASC,eAAT,GAA2B;AACtC,SAAO;AACHC,IAAAA,OAAO,EAAE,KADN;;AAEHC,IAAAA,IAAI,CAACC,QAAQ,GAAG,EAAZ,EAAgB;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAhB,EAAiC;AAAA;;AACjC,YAAM;AAAEC,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAkBH,IAAxB;AAEA,YAAMI,IAAI,GAAGH,KAAK,CAACI,SAAN,CAAgB;AAAEC,QAAAA,KAAK,EAAEX;AAAT,OAAhB,CAAb;AAEA,YAAMY,KAAK,GAAGH,IAAH,aAAGA,IAAH,gDAAGA,IAAI,CAAEI,gBAAT,0DAAG,sBAAwBD,KAAtC;AAEA,YAAME,IAAI,GAAGP,IAAI,GAAGC,KAAP,GAAe,CAA5B;AACA,YAAMO,KAAK,GAAGC,IAAI,CAACC,IAAL,CAAUL,KAAK,GAAGJ,KAAlB,CAAd;AACH,KAXE;;AAYHU,IAAAA,KAAK,GAAG,CAEP;;AAdE,GAAP;AAgBH","sourcesContent":["import { PAGINATION_QUERY } from '../components/Pagination';\r\n\r\nexport default function paginationField() {\r\n    return {\r\n        keyArgs: false,\r\n        read(existing = [], { args, cache }) {\r\n            const { skip, first } = args;\r\n\r\n            const data = cache.readQuery({ query: PAGINATION_QUERY })\r\n\r\n            const count = data?._allProductsMeta?.count;\r\n\r\n            const page = skip / first + 1;\r\n            const pages = Math.ceil(count / first);\r\n        },\r\n        merge() {\r\n\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}