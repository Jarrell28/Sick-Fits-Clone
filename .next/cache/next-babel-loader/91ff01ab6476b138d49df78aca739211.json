{"ast":null,"code":"import _regeneratorRuntime from \"C:/projects/AdvancedReact/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/projects/AdvancedReact/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:/projects/AdvancedReact/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:/projects/AdvancedReact/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\projects\\\\AdvancedReact\\\\frontend\\\\components\\\\UpdateProduct.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation UPDATE_PRODUCT_MUTATION(\\n        $id: ID!\\n        $name: String\\n        $description: String\\n        $price: Int   \\n    ) {\\n        updateProduct(\\n            id: $id,\\n            data: {\\n                name: $name\\n                description: $description\\n                price: $price\\n            }\\n        ) {\\n            id\\n            name\\n            description\\n            price\\n        }\\n    }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query SINGLE_PRODUCT_QUERY($id: ID!){\\n        Product(where: {\\n            id:$id\\n        }) {\\n            id\\n            name\\n            description\\n            price\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport useForm from \"../lib/useForm\";\nimport DisplayError from \"./ErrorMessage\";\nimport Form from \"./styles/Form\";\nvar SINGLE_PRODUCT_QUERY = gql(_templateObject());\nvar UPDATE_PRODUCT_MUTATION = gql(_templateObject2());\nexport default function UpdateProduct(_ref) {\n  _s();\n\n  var id = _ref.id;\n\n  var _useQuery = useQuery(SINGLE_PRODUCT_QUERY, {\n    variables: {\n      id: id\n    }\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  var _useMutation = useMutation(UPDATE_PRODUCT_MUTATION),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      updateProduct = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      updateData = _useMutation2$.data,\n      updateError = _useMutation2$.error,\n      updateLoading = _useMutation2$.loading;\n\n  var _useForm = useForm({\n    name: data === null || data === void 0 ? void 0 : data.Product.name,\n    price: data === null || data === void 0 ? void 0 : data.Product.price,\n    description: data === null || data === void 0 ? void 0 : data.Product.description\n  }),\n      inputs = _useForm.inputs,\n      handleChange = _useForm.handleChange,\n      resetForm = _useForm.resetForm,\n      clearForm = _useForm.clearForm;\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 25\n  }, this); // if (error) return <DisplayError error={error} />\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                _context.next = 3;\n                return updateProduct({\n                  variables: {\n                    id: id,\n                    name: inputs.name,\n                    description: inputs.description,\n                    price: inputs.price\n                  }\n                });\n\n              case 3:\n                res = _context.sent;\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }(),\n    children: [/*#__PURE__*/_jsxDEV(DisplayError, {\n      error: error || updateError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      disabled: updateLoading,\n      \"aria-busy\": updateLoading,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: [\"Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          placeholder: \"Name\",\n          value: inputs.name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"price\",\n        children: [\"Price: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"price\",\n          name: \"price\",\n          placeholder: \"Price\",\n          value: inputs.price,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: [\"Description: \", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"description\",\n          name: \"description\",\n          placeholder: \"Description\",\n          value: inputs.description,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UpdateProduct, \"AWjZSwpo12dT+7f5vuV/gY0X1v0=\", false, function () {\n  return [useQuery, useMutation, useForm];\n});\n\n_c = UpdateProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProduct\");","map":{"version":3,"sources":["C:/projects/AdvancedReact/frontend/components/UpdateProduct.js"],"names":["useMutation","useQuery","gql","useForm","DisplayError","Form","SINGLE_PRODUCT_QUERY","UPDATE_PRODUCT_MUTATION","UpdateProduct","id","variables","data","error","loading","updateProduct","updateData","updateError","updateLoading","name","Product","price","description","inputs","handleChange","resetForm","clearForm","e","preventDefault","res"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,gBAAtC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AAGA,IAAMC,oBAAoB,GAAGJ,GAAH,mBAA1B;AAaA,IAAMK,uBAAuB,GAAGL,GAAH,oBAA7B;AAuBA,eAAe,SAASM,aAAT,OAA+B;AAAA;;AAAA,MAANC,EAAM,QAANA,EAAM;;AAAA,kBACTR,QAAQ,CACrCK,oBADqC,EACf;AACtBI,IAAAA,SAAS,EAAE;AAAED,MAAAA,EAAE,EAAEA;AAAN;AADW,GADe,CADC;AAAA,MAClCE,IADkC,aAClCA,IADkC;AAAA,MAC5BC,KAD4B,aAC5BA,KAD4B;AAAA,MACrBC,OADqB,aACrBA,OADqB;;AAAA,qBAMgDb,WAAW,CAACO,uBAAD,CAN3D;AAAA;AAAA,MAMnCO,aANmC;AAAA;AAAA,MAMZC,UANY,kBAMlBJ,IANkB;AAAA,MAMOK,WANP,kBAMAJ,KANA;AAAA,MAM6BK,aAN7B,kBAMoBJ,OANpB;;AAAA,iBAQaV,OAAO,CAAC;AAC3De,IAAAA,IAAI,EAAEP,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEQ,OAAN,CAAcD,IADuC;AAE3DE,IAAAA,KAAK,EAAET,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEQ,OAAN,CAAcC,KAFsC;AAG3DC,IAAAA,WAAW,EAAEV,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEQ,OAAN,CAAcE;AAHgC,GAAD,CARpB;AAAA,MAQlCC,MARkC,YAQlCA,MARkC;AAAA,MAQ1BC,YAR0B,YAQ1BA,YAR0B;AAAA,MAQZC,SARY,YAQZA,SARY;AAAA,MAQDC,SARC,YAQDA,SARC;;AAa1C,MAAIZ,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP,CAb6B,CAc1C;;AACA,sBACI,QAAC,IAAD;AAAM,IAAA,QAAQ;AAAA,2EAAE,iBAAOa,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACZA,gBAAAA,CAAC,CAACC,cAAF;AADY;AAAA,uBAEMb,aAAa,CAAC;AAC5BJ,kBAAAA,SAAS,EAAE;AACPD,oBAAAA,EAAE,EAAEA,EADG;AAEPS,oBAAAA,IAAI,EAAEI,MAAM,CAACJ,IAFN;AAGPG,oBAAAA,WAAW,EAAEC,MAAM,CAACD,WAHb;AAIPD,oBAAAA,KAAK,EAAEE,MAAM,CAACF;AAJP;AADiB,iBAAD,CAFnB;;AAAA;AAENQ,gBAAAA,GAFM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;AAAA,OAAd;AAAA,4BAaI,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEhB,KAAK,IAAII;AAA9B;AAAA;AAAA;AAAA;AAAA,YAbJ,eAcI;AAAU,MAAA,QAAQ,EAAEC,aAApB;AAAmC,mBAAWA,aAA9C;AAAA,8BAII;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA,0CACU;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,EAAE,EAAC,MAAtB;AAA6B,UAAA,IAAI,EAAC,MAAlC;AAAyC,UAAA,WAAW,EAAC,MAArD;AAA4D,UAAA,KAAK,EAAEK,MAAM,CAACJ,IAA1E;AAAgF,UAAA,QAAQ,EAAEK;AAA1F;AAAA;AAAA;AAAA;AAAA,gBADV;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAOI;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA,2CACW;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,EAAE,EAAC,OAAxB;AAAgC,UAAA,IAAI,EAAC,OAArC;AAA6C,UAAA,WAAW,EAAC,OAAzD;AAAiE,UAAA,KAAK,EAAED,MAAM,CAACF,KAA/E;AAAsF,UAAA,QAAQ,EAAEG;AAAhG;AAAA;AAAA;AAAA;AAAA,gBADX;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,eAUI;AAAO,QAAA,OAAO,EAAC,aAAf;AAAA,iDACiB;AAAU,UAAA,EAAE,EAAC,aAAb;AAA2B,UAAA,IAAI,EAAC,aAAhC;AAA8C,UAAA,WAAW,EAAC,aAA1D;AAAwE,UAAA,KAAK,EAAED,MAAM,CAACD,WAAtF;AAAmG,UAAA,QAAQ,EAAEE;AAA7G;AAAA;AAAA;AAAA;AAAA,gBADjB;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ,eAcI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkCH;;GAjDuBf,a;UACaP,Q,EAKyDD,W,EAEnCG,O;;;KARnCK,a","sourcesContent":["import { useMutation, useQuery } from \"@apollo/client\"\r\nimport gql from \"graphql-tag\"\r\nimport useForm from \"../lib/useForm\"\r\nimport DisplayError from \"./ErrorMessage\"\r\nimport Form from \"./styles/Form\"\r\n\r\n\r\nconst SINGLE_PRODUCT_QUERY = gql`\r\n    query SINGLE_PRODUCT_QUERY($id: ID!){\r\n        Product(where: {\r\n            id:$id\r\n        }) {\r\n            id\r\n            name\r\n            description\r\n            price\r\n        }\r\n    }\r\n`\r\n\r\nconst UPDATE_PRODUCT_MUTATION = gql`\r\n    mutation UPDATE_PRODUCT_MUTATION(\r\n        $id: ID!\r\n        $name: String\r\n        $description: String\r\n        $price: Int   \r\n    ) {\r\n        updateProduct(\r\n            id: $id,\r\n            data: {\r\n                name: $name\r\n                description: $description\r\n                price: $price\r\n            }\r\n        ) {\r\n            id\r\n            name\r\n            description\r\n            price\r\n        }\r\n    }\r\n`\r\n\r\nexport default function UpdateProduct({ id }) {\r\n    const { data, error, loading } = useQuery(\r\n        SINGLE_PRODUCT_QUERY, {\r\n        variables: { id: id }\r\n    })\r\n\r\n    const [updateProduct, { data: updateData, error: updateError, loading: updateLoading }] = useMutation(UPDATE_PRODUCT_MUTATION)\r\n\r\n    const { inputs, handleChange, resetForm, clearForm } = useForm({\r\n        name: data?.Product.name,\r\n        price: data?.Product.price,\r\n        description: data?.Product.description,\r\n    });\r\n    if (loading) return <p>loading...</p>\r\n    // if (error) return <DisplayError error={error} />\r\n    return (\r\n        <Form onSubmit={async (e) => {\r\n            e.preventDefault();\r\n            const res = await updateProduct({\r\n                variables: {\r\n                    id: id,\r\n                    name: inputs.name,\r\n                    description: inputs.description,\r\n                    price: inputs.price\r\n\r\n                }\r\n            });\r\n        }}>\r\n\r\n            <DisplayError error={error || updateError} />\r\n            <fieldset disabled={updateLoading} aria-busy={updateLoading}>\r\n                {/* <label htmlFor=\"image\">\r\n                    Image: <input type=\"file\" required id=\"image\" name=\"image\" onChange={handleChange} />\r\n                </label> */}\r\n                <label htmlFor=\"name\">\r\n                    Name: <input type=\"text\" id=\"name\" name=\"name\" placeholder=\"Name\" value={inputs.name} onChange={handleChange} />\r\n                </label>\r\n                <label htmlFor=\"price\">\r\n                    Price: <input type=\"number\" id=\"price\" name=\"price\" placeholder=\"Price\" value={inputs.price} onChange={handleChange} />\r\n                </label>\r\n                <label htmlFor=\"description\">\r\n                    Description: <textarea id=\"description\" name=\"description\" placeholder=\"Description\" value={inputs.description} onChange={handleChange} />\r\n                </label>\r\n\r\n                <button type=\"submit\">Update Product</button>\r\n            </fieldset>\r\n\r\n        </Form>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}